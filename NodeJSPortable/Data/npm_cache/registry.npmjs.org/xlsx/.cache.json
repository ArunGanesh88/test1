{"_id":"xlsx","_rev":"310-b88f76359cac571b31c8c666ad648c79","name":"xlsx","description":"Excel (XLSB/XLSX/XLSM/XLS/XML) and ODS (ODS/FODS/UOS) spreadsheet parser and writer","dist-tags":{"latest":"0.9.13"},"versions":{"0.3.3":{"name":"xlsx","version":"0.3.3","author":{"name":"sheetjs"},"description":"(one day) a full-featured XLSX parser and writer.  For now, primitive parser","keywords":["xlsx","office","excel","spreadsheet"],"bin":{"xlsx2csv":"./bin/xlsx2csv.njs"},"main":"./xlsx","dependencies":{"ssf":">=0.1.1","codepage":"","commander":""},"devDependencies":{"mocha":"","jasmine-node":"x"},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make mocha","test-jasmine":"jasmine-node --verbose tests/"},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.6"},"homepage":"https://github.com/SheetJS/js-xlsx","_id":"xlsx@0.3.3","dist":{"shasum":"d0f2307bca5ba16051e0db39902c97ffa819cb82","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.3.3.tgz"},"_from":".","_npmVersion":"1.3.14","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"directories":{}},"0.3.5":{"name":"xlsx","version":"0.3.5","author":{"name":"sheetjs"},"description":"(one day) a full-featured XLSX parser and writer.  For now, primitive parser","keywords":["xlsx","office","excel","spreadsheet"],"bin":{"xlsx2csv":"./bin/xlsx2csv.njs"},"main":"./xlsx","dependencies":{"ssf":">=0.1.1","codepage":"","commander":""},"devDependencies":{"mocha":"","jasmine-node":"x"},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make mocha","test-jasmine":"jasmine-node --verbose tests/"},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.6"},"homepage":"https://github.com/SheetJS/js-xlsx","_id":"xlsx@0.3.5","dist":{"shasum":"c7df8b0afad0411dd9450175173594fb0630103a","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.3.5.tgz"},"_from":".","_npmVersion":"1.3.14","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"directories":{}},"0.3.6":{"name":"xlsx","version":"0.3.6","author":{"name":"sheetjs"},"description":"(one day) a full-featured XLSX parser and writer.  For now, primitive parser","keywords":["xlsx","office","excel","spreadsheet"],"bin":{"xlsx2csv":"./bin/xlsx2csv.njs"},"main":"./xlsx","dependencies":{"ssf":">=0.1.1","codepage":"","commander":""},"devDependencies":{"mocha":"","jasmine-node":"x"},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make mocha","test-jasmine":"jasmine-node --verbose tests/"},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.6"},"homepage":"https://github.com/SheetJS/js-xlsx","_id":"xlsx@0.3.6","dist":{"shasum":"c8312e014791397be783014820d129cb42f870ee","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.3.6.tgz"},"_from":".","_npmVersion":"1.3.14","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"directories":{}},"0.3.7":{"name":"xlsx","version":"0.3.7","author":{"name":"sheetjs"},"description":"(one day) a full-featured XLSX parser and writer.  For now, primitive parser","keywords":["xlsx","office","excel","spreadsheet"],"bin":{"xlsx2csv":"./bin/xlsx2csv.njs"},"main":"./xlsx","dependencies":{"ssf":">=0.1.1","codepage":"","commander":""},"devDependencies":{"mocha":"","jasmine-node":"x"},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make mocha","test-jasmine":"jasmine-node --verbose tests/"},"config":{"blanket":{"pattern":"xlsx.js"}},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.6"},"homepage":"https://github.com/SheetJS/js-xlsx","_id":"xlsx@0.3.7","dist":{"shasum":"2cfed0136d6c273ed0a7dff4367a204809755c5e","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.3.7.tgz"},"_from":".","_npmVersion":"1.3.14","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"directories":{}},"0.3.9":{"name":"xlsx","version":"0.3.9","author":{"name":"sheetjs"},"description":"(one day) a full-featured XLSX parser and writer.  For now, primitive parser","keywords":["xlsx","office","excel","spreadsheet"],"bin":{"xlsx2csv":"./bin/xlsx2csv.njs"},"main":"./xlsx","dependencies":{"ssf":">=0.1.1","codepage":"","commander":""},"devDependencies":{"mocha":"","jasmine-node":"x"},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make mocha","test-jasmine":"jasmine-node --verbose tests/"},"config":{"blanket":{"pattern":"xlsx.js"}},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.6"},"homepage":"https://github.com/SheetJS/js-xlsx","_id":"xlsx@0.3.9","dist":{"shasum":"a6ecd8e94891beb065cff1d259d10db79769daa8","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.3.9.tgz"},"_from":".","_npmVersion":"1.3.21","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"directories":{}},"0.3.10":{"name":"xlsx","version":"0.3.10","author":{"name":"sheetjs"},"description":"(one day) a full-featured XLSX parser and writer.  For now, primitive parser","keywords":["xlsx","office","excel","spreadsheet"],"bin":{"xlsx2csv":"./bin/xlsx2csv.njs"},"main":"./xlsx","dependencies":{"ssf":">=0.1.1","codepage":"","commander":""},"devDependencies":{"mocha":"","jasmine-node":"x"},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make mocha","test-jasmine":"jasmine-node --verbose tests/"},"config":{"blanket":{"pattern":"xlsx.js"}},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.6"},"homepage":"https://github.com/SheetJS/js-xlsx","_id":"xlsx@0.3.10","dist":{"shasum":"80889db94012b14bd99ef1e6261bc2934478e38a","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.3.10.tgz"},"_from":".","_npmVersion":"1.3.24","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"directories":{}},"0.4.3":{"name":"xlsx","version":"0.4.3","author":{"name":"sheetjs"},"description":"XLSB / XLSX / XLSM parser","keywords":["xlsx","xlsb","xlsm","office","excel","spreadsheet"],"bin":{"xlsx2csv":"./bin/xlsx2csv.njs"},"main":"./xlsx","dependencies":{"ssf":">=0.5.5","codepage":"","jszip":"~0.2.1","commander":""},"devDependencies":{"mocha":"","jasmine-node":"x"},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make mocha","test-jasmine":"jasmine-node --verbose tests/"},"config":{"blanket":{"pattern":"xlsx.js"}},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.6"},"homepage":"https://github.com/SheetJS/js-xlsx","_id":"xlsx@0.4.3","dist":{"shasum":"9fcddaed5a8a26b8b24518b35bb8068e296f034a","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.4.3.tgz"},"_from":".","_npmVersion":"1.3.24","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"directories":{}},"0.5.0":{"name":"xlsx","version":"0.5.0","author":{"name":"sheetjs"},"description":"XLSB / XLSX / XLSM parser","keywords":["xlsx","xlsb","xlsm","office","excel","spreadsheet"],"bin":{"xlsx2csv":"./bin/xlsx2csv.njs"},"main":"./xlsx","dependencies":{"ssf":">=0.5.5","codepage":"","jszip":"~0.2.1","commander":""},"devDependencies":{"mocha":"","jasmine-node":"x"},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make mocha","test-jasmine":"jasmine-node --verbose tests/"},"config":{"blanket":{"pattern":"xlsx.js"}},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.6"},"homepage":"https://github.com/SheetJS/js-xlsx","_id":"xlsx@0.5.0","dist":{"shasum":"f89e11a5e8801d2cc68df52611b576bb3b41e4d5","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.5.0.tgz"},"_from":".","_npmVersion":"1.3.24","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"directories":{}},"0.5.1":{"name":"xlsx","version":"0.5.1","author":{"name":"sheetjs"},"description":"XLSB / XLSX / XLSM parser","keywords":["xlsx","xlsb","xlsm","office","excel","spreadsheet"],"bin":{"xlsx2csv":"./bin/xlsx2csv.njs"},"main":"./xlsx","dependencies":{"ssf":">=0.5.5","codepage":"","jszip":"~0.2.1","commander":""},"devDependencies":{"mocha":"","jasmine-node":"x"},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make mocha","test-jasmine":"jasmine-node --verbose tests/"},"config":{"blanket":{"pattern":"xlsx.js"}},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.6"},"homepage":"https://github.com/SheetJS/js-xlsx","_id":"xlsx@0.5.1","dist":{"shasum":"92317075fa5f312dc2d8c2f54d7a34686ba3c7c7","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.5.1.tgz"},"_from":".","_npmVersion":"1.3.24","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"directories":{}},"0.5.2":{"name":"xlsx","version":"0.5.2","author":{"name":"sheetjs"},"description":"XLSB / XLSX / XLSM parser","keywords":["xlsx","xlsb","xlsm","office","excel","spreadsheet"],"bin":{"xlsx2csv":"./bin/xlsx2csv.njs"},"main":"./xlsx","dependencies":{"ssf":">=0.5.5","codepage":"","jszip":"~2.1.0","commander":""},"devDependencies":{"mocha":"","jasmine-node":"x"},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make mocha","test-jasmine":"jasmine-node --verbose tests/"},"config":{"blanket":{"pattern":"xlsx.js"}},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.6"},"homepage":"https://github.com/SheetJS/js-xlsx","_id":"xlsx@0.5.2","dist":{"shasum":"c7dd90fcb95f268e32946604fed2db76e2c7d519","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.5.2.tgz"},"_from":".","_npmVersion":"1.3.24","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"directories":{}},"0.5.3":{"name":"xlsx","version":"0.5.3","author":{"name":"sheetjs"},"description":"XLSB / XLSX / XLSM parser","keywords":["xlsx","xlsb","xlsm","office","excel","spreadsheet"],"bin":{"xlsx2csv":"./bin/xlsx2csv.njs"},"main":"./xlsx","dependencies":{"ssf":">=0.5.5","codepage":"","jszip":"~2.1.0","commander":""},"devDependencies":{"mocha":"","jasmine-node":"x"},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make mocha","test-jasmine":"jasmine-node --verbose tests/"},"config":{"blanket":{"pattern":"xlsx.js"}},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.6"},"homepage":"https://github.com/SheetJS/js-xlsx","_id":"xlsx@0.5.3","dist":{"shasum":"765a81cc7f243bd23e8175600b2ccfeaeeb1204c","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.5.3.tgz"},"_from":".","_npmVersion":"1.3.24","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"directories":{}},"0.5.4":{"name":"xlsx","version":"0.5.4","author":{"name":"sheetjs"},"description":"XLSB / XLSX / XLSM parser","keywords":["xlsx","xlsb","xlsm","office","excel","spreadsheet"],"bin":{"xlsx2csv":"./bin/xlsx2csv.njs"},"main":"./xlsx","dependencies":{"ssf":"~0.5.6","codepage":"","jszip":"~2.1.0","commander":""},"devDependencies":{"mocha":"","jasmine-node":"x"},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make mocha","test-jasmine":"jasmine-node --verbose tests/"},"config":{"blanket":{"pattern":"xlsx.js"}},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.6"},"homepage":"https://github.com/SheetJS/js-xlsx","_id":"xlsx@0.5.4","dist":{"shasum":"3dcbf461304308ec335a45ab92de796ce7a2b982","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.5.4.tgz"},"_from":".","_npmVersion":"1.3.26","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"directories":{}},"0.5.5":{"name":"xlsx","version":"0.5.5","author":{"name":"sheetjs"},"description":"XLSB / XLSX / XLSM parser","keywords":["xlsx","xlsb","xlsm","office","excel","spreadsheet"],"bin":{"xlsx2csv":"./bin/xlsx2csv.njs"},"main":"./xlsx","dependencies":{"ssf":"~0.5.6","codepage":"","jszip":"~2.1.0","commander":""},"devDependencies":{"mocha":"","jasmine-node":"x"},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make mocha","test-jasmine":"jasmine-node --verbose tests/"},"config":{"blanket":{"pattern":"xlsx.js"}},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.6"},"homepage":"https://github.com/SheetJS/js-xlsx","_id":"xlsx@0.5.5","dist":{"shasum":"8b28edcf1e5d91fea694fe3fa3e0aeb002ffc018","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.5.5.tgz"},"_from":".","_npmVersion":"1.3.26","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"directories":{}},"0.5.6":{"name":"xlsx","version":"0.5.6","author":{"name":"sheetjs"},"description":"XLSB / XLSX / XLSM parser","keywords":["xlsx","xlsb","xlsm","office","excel","spreadsheet"],"bin":{"xlsx2csv":"./bin/xlsx2csv.njs"},"main":"./xlsx","dependencies":{"ssf":"~0.5.6","codepage":"","jszip":"~2.1.0","commander":""},"devDependencies":{"mocha":"","uglify-js":"","jasmine-node":"x"},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make mocha","test-jasmine":"jasmine-node --verbose tests/"},"config":{"blanket":{"pattern":"xlsx.js"}},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.6"},"homepage":"https://github.com/SheetJS/js-xlsx","_id":"xlsx@0.5.6","dist":{"shasum":"fb9970c570546517e6e07fdca9edc829cd415b7e","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.5.6.tgz"},"_from":".","_npmVersion":"1.3.26","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"directories":{}},"0.5.7":{"name":"xlsx","version":"0.5.7","author":{"name":"sheetjs"},"description":"XLSB / XLSX / XLSM parser","keywords":["xlsx","xlsb","xlsm","office","excel","spreadsheet"],"bin":{"xlsx2csv":"./bin/xlsx2csv.njs"},"main":"./xlsx","dependencies":{"ssf":"~0.5.6","codepage":"","cfb":"","jszip":"~2.1.0","commander":""},"devDependencies":{"mocha":"","uglify-js":"","jasmine-node":"x"},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make mocha","test-jasmine":"jasmine-node --verbose tests/"},"config":{"blanket":{"pattern":"xlsx.js"}},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.6"},"homepage":"https://github.com/SheetJS/js-xlsx","_id":"xlsx@0.5.7","dist":{"shasum":"8deedcd76b648d6b2dc4b6b806d178bfd0dc04b3","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.5.7.tgz"},"_from":".","_npmVersion":"1.3.26","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"directories":{}},"0.5.8":{"name":"xlsx","version":"0.5.8","author":{"name":"sheetjs"},"description":"XLSB / XLSX / XLSM parser","keywords":["xlsx","xlsb","xlsm","office","excel","spreadsheet"],"bin":{"xlsx2csv":"./bin/xlsx2csv.njs"},"main":"./xlsx","dependencies":{"ssf":"~0.5.6","codepage":"","cfb":"","jszip":"~2.1.0","commander":""},"devDependencies":{"mocha":"","uglify-js":"","jasmine-node":"x"},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make mocha","test-jasmine":"jasmine-node --verbose tests/"},"config":{"blanket":{"pattern":"xlsx.js"}},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.6"},"homepage":"https://github.com/SheetJS/js-xlsx","_id":"xlsx@0.5.8","dist":{"shasum":"d99a1345253b979b0ad7edc126ba58ca9501537c","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.5.8.tgz"},"_from":".","_npmVersion":"1.3.26","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"directories":{}},"0.5.9":{"name":"xlsx","version":"0.5.9","author":{"name":"sheetjs"},"description":"XLSB / XLSX / XLSM parser","keywords":["xlsx","xlsb","xlsm","office","excel","spreadsheet"],"bin":{"xlsx2csv":"./bin/xlsx2csv.njs"},"main":"./xlsx","dependencies":{"ssf":"~0.5.6","codepage":"","cfb":"","jszip":"~2.1.0","commander":""},"devDependencies":{"mocha":"","uglify-js":"","jasmine-node":"x"},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make mocha","test-jasmine":"jasmine-node --verbose tests/"},"config":{"blanket":{"pattern":"xlsx.js"}},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.6"},"homepage":"https://github.com/SheetJS/js-xlsx","_id":"xlsx@0.5.9","dist":{"shasum":"a427b9df3f1e87486d8591b476c60ca1d18ff917","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.5.9.tgz"},"_from":".","_npmVersion":"1.3.26","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"directories":{}},"0.5.9-a":{"name":"xlsx","version":"0.5.9-a","author":{"name":"sheetjs"},"description":"XLSB / XLSX / XLSM parser","keywords":["xlsx","xlsb","xlsm","office","excel","spreadsheet"],"bin":{"xlsx2csv":"./bin/xlsx2csv.njs"},"main":"./xlsx","dependencies":{"ssf":"~0.5.6","codepage":"","cfb":"","jszip":"~2.1.0","commander":""},"devDependencies":{"mocha":"","uglify-js":"","jasmine-node":"x"},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make mocha","test-jasmine":"jasmine-node --verbose tests/"},"config":{"blanket":{"pattern":"xlsx.js"}},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.6"},"homepage":"https://github.com/SheetJS/js-xlsx","_id":"xlsx@0.5.9-a","dist":{"shasum":"8a58aef1fe57ed7b7cdbd54135d31c528fffdf24","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.5.9-a.tgz"},"_from":".","_npmVersion":"1.3.26","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"directories":{}},"0.5.10":{"name":"xlsx","version":"0.5.10","author":{"name":"sheetjs"},"description":"XLSB / XLSX / XLSM parser","keywords":["xlsx","xlsb","xlsm","office","excel","spreadsheet"],"bin":{"xlsx2csv":"./bin/xlsx2csv.njs"},"main":"./xlsx","dependencies":{"ssf":"~0.5.6","codepage":"","cfb":"","jszip":"~2.1.0","commander":""},"devDependencies":{"mocha":"","uglify-js":"","jasmine-node":"x"},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make mocha","test-jasmine":"jasmine-node --verbose tests/"},"config":{"blanket":{"pattern":"xlsx.js"}},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.6"},"homepage":"https://github.com/SheetJS/js-xlsx","_id":"xlsx@0.5.10","dist":{"shasum":"4548d4b53e16c0cd337ea735d470dda237ad5cac","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.5.10.tgz"},"_from":".","_npmVersion":"1.3.26","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"directories":{}},"0.5.10-a":{"name":"xlsx","version":"0.5.10-a","author":{"name":"sheetjs"},"description":"XLSB / XLSX / XLSM parser","keywords":["xlsx","xlsb","xlsm","office","excel","spreadsheet"],"bin":{"xlsx2csv":"./bin/xlsx2csv.njs"},"main":"./xlsx","dependencies":{"ssf":"~0.5.6","codepage":"","cfb":"","jszip":"~2.1.0","commander":""},"devDependencies":{"mocha":"","uglify-js":"","jasmine-node":"x"},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make mocha","test-jasmine":"jasmine-node --verbose tests/"},"config":{"blanket":{"pattern":"xlsx.js"}},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.6"},"homepage":"https://github.com/SheetJS/js-xlsx","_id":"xlsx@0.5.10-a","dist":{"shasum":"2f56ebb0ab36788f7eb3de9e76ad809faebf6e9b","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.5.10-a.tgz"},"_from":".","_npmVersion":"1.3.26","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"directories":{}},"0.5.10-b.3":{"name":"xlsx","version":"0.5.10-b.3","author":{"name":"sheetjs"},"description":"XLSB / XLSX / XLSM parser","keywords":["xlsx","xlsb","xlsm","office","excel","spreadsheet"],"bin":{"xlsx2csv":"./bin/xlsx2csv.njs"},"main":"./xlsx","dependencies":{"ssf":"~0.5.6","codepage":"","cfb":"","jszip":"~2.1.0","commander":""},"devDependencies":{"mocha":"","uglify-js":"","jasmine-node":"x"},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make mocha","test-jasmine":"jasmine-node --verbose tests/"},"config":{"blanket":{"pattern":"xlsx.js"}},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.6"},"homepage":"https://github.com/SheetJS/js-xlsx","_id":"xlsx@0.5.10-b.3","dist":{"shasum":"5b656e5331cbda1a8b65f6c18985db66c6083d1e","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.5.10-b.3.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"directories":{}},"0.5.11":{"name":"xlsx","version":"0.5.11","author":{"name":"sheetjs"},"description":"XLSB / XLSX / XLSM (Excel 2007+ Spreadsheet) parser","keywords":["xlsx","xlsb","xlsm","office","excel","spreadsheet"],"bin":{"xlsx2csv":"./bin/xlsx2csv.njs"},"main":"./xlsx","dependencies":{"ssf":"~0.5.9","codepage":"","cfb":"","jszip":"~2.1.0","commander":""},"devDependencies":{"mocha":"","uglify-js":"","jasmine-node":"x"},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make mocha","test-jasmine":"jasmine-node --verbose tests/"},"config":{"blanket":{"pattern":"xlsx.js"}},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.6"},"homepage":"https://github.com/SheetJS/js-xlsx","_id":"xlsx@0.5.11","dist":{"shasum":"2474f1b3560c7083955e482a87b3322ae09b3252","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.5.11.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"directories":{}},"0.5.12":{"name":"xlsx","version":"0.5.12","author":{"name":"sheetjs"},"description":"XLSB / XLSX / XLSM (Excel 2007+ Spreadsheet) parser","keywords":["xlsx","xlsb","xlsm","office","excel","spreadsheet"],"bin":{"xlsx2csv":"./bin/xlsx2csv.njs"},"main":"./xlsx","dependencies":{"ssf":"~0.5.9","codepage":"","cfb":"","jszip":"~2.1.0","commander":""},"devDependencies":{"mocha":"","uglify-js":"","jasmine-node":"x"},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make mocha","test-jasmine":"jasmine-node --verbose tests/"},"config":{"blanket":{"pattern":"xlsx.js"}},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.8"},"homepage":"https://github.com/SheetJS/js-xlsx","_id":"xlsx@0.5.12","dist":{"shasum":"ec4399bcd7cffada2498a812aa70a3cb10ebdaed","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.5.12.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"directories":{}},"0.5.13":{"name":"xlsx","version":"0.5.13","author":{"name":"sheetjs"},"description":"XLSB / XLSX / XLSM (Excel 2007+ Spreadsheet) parser","keywords":["xlsx","xlsb","xlsm","office","excel","spreadsheet"],"bin":{"xlsx2csv":"./bin/xlsx2csv.njs"},"main":"./xlsx","dependencies":{"ssf":"~0.5.9","codepage":"","cfb":"","jszip":"~2.1.0","commander":""},"devDependencies":{"mocha":"","uglify-js":"","jasmine-node":"x"},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make mocha","test-jasmine":"jasmine-node --verbose tests/"},"config":{"blanket":{"pattern":"xlsx.js"}},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.8"},"homepage":"https://github.com/SheetJS/js-xlsx","_id":"xlsx@0.5.13","dist":{"shasum":"a35ef3e5bde9f1111c6a28a68582d25518695f74","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.5.13.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"directories":{}},"0.5.13-a":{"name":"xlsx","version":"0.5.13-a","author":{"name":"sheetjs"},"description":"XLSB / XLSX / XLSM (Excel 2007+ Spreadsheet) parser","keywords":["xlsx","xlsb","xlsm","office","excel","spreadsheet"],"bin":{"xlsx2csv":"./bin/xlsx2csv.njs"},"main":"./xlsx","dependencies":{"ssf":"~0.5.9","codepage":"","cfb":"","jszip":"~2.1.0","commander":""},"devDependencies":{"mocha":"","uglify-js":"","jasmine-node":"x"},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make mocha","test-jasmine":"jasmine-node --verbose tests/"},"config":{"blanket":{"pattern":"xlsx.js"}},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.8"},"homepage":"https://github.com/SheetJS/js-xlsx","_id":"xlsx@0.5.13-a","dist":{"shasum":"719efc232381d9eb9a7d021bc04f6d8e70f382bb","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.5.13-a.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"directories":{}},"0.5.14":{"name":"xlsx","version":"0.5.14","author":{"name":"sheetjs"},"description":"XLSB / XLSX / XLSM (Excel 2007+ Spreadsheet) parser","keywords":["xlsx","xlsb","xlsm","office","excel","spreadsheet"],"bin":{"xlsx2csv":"./bin/xlsx2csv.njs"},"main":"./xlsx","dependencies":{"ssf":"~0.6.1","codepage":"","cfb":"","jszip":"~2.1.0","commander":""},"devDependencies":{"mocha":"","uglify-js":"","jasmine-node":"x"},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make mocha","test-jasmine":"jasmine-node --verbose tests/"},"config":{"blanket":{"pattern":"xlsx.js"}},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.8"},"homepage":"https://github.com/SheetJS/js-xlsx","_id":"xlsx@0.5.14","dist":{"shasum":"b9cbbcf4cd4f77890f6d1e586dc3c5c9989bd58d","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.5.14.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"directories":{}},"0.5.15":{"name":"xlsx","version":"0.5.15","author":{"name":"sheetjs"},"description":"XLSB / XLSX / XLSM (Excel 2007+ Spreadsheet) parser","keywords":["xlsx","xlsb","xlsm","office","excel","spreadsheet"],"bin":{"xlsx2csv":"./bin/xlsx2csv.njs"},"main":"./xlsx","dependencies":{"ssf":"~0.6.2","codepage":"","cfb":"","jszip":"~2.1.0","commander":""},"devDependencies":{"mocha":"","uglify-js":"","jasmine-node":"x"},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make mocha","test-jasmine":"jasmine-node --verbose tests/"},"config":{"blanket":{"pattern":"xlsx.js"}},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.8"},"homepage":"https://github.com/SheetJS/js-xlsx","_id":"xlsx@0.5.15","dist":{"shasum":"8a957108ffe7ca7091a041cf61e368e9ac98768a","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.5.15.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"directories":{}},"0.5.16":{"name":"xlsx","version":"0.5.16","author":{"name":"sheetjs"},"description":"XLSB / XLSX / XLSM (Excel 2007+ Spreadsheet) parser","keywords":["xlsx","xlsb","xlsm","office","excel","spreadsheet"],"bin":{"xlsx2csv":"./bin/xlsx2csv.njs"},"main":"./xlsx","dependencies":{"ssf":"~0.6.3","codepage":"","cfb":"","jszip":"~2.1.0","commander":""},"devDependencies":{"mocha":"","uglify-js":"","jasmine-node":"x"},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make mocha","test-jasmine":"jasmine-node --verbose tests/"},"config":{"blanket":{"pattern":"xlsx.js"}},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.8"},"homepage":"https://github.com/SheetJS/js-xlsx","_id":"xlsx@0.5.16","dist":{"shasum":"1ad05c0c16dce58c99a641e6908ed13b86ea5598","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.5.16.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"directories":{}},"0.5.17":{"name":"xlsx","version":"0.5.17","author":{"name":"sheetjs"},"description":"XLSB / XLSX / XLSM (Excel 2007+ Spreadsheet) parser","keywords":["xlsx","xlsb","xlsm","office","excel","spreadsheet"],"bin":{"xlsx2csv":"./bin/xlsx2csv.njs"},"main":"./xlsx","dependencies":{"ssf":"~0.6.3","codepage":"","cfb":"","jszip":"~2.1.0","commander":""},"devDependencies":{"mocha":"","uglify-js":"","jasmine-node":"x"},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make mocha","test-jasmine":"jasmine-node --verbose tests/"},"config":{"blanket":{"pattern":"xlsx.js"}},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.8"},"homepage":"https://github.com/SheetJS/js-xlsx","_id":"xlsx@0.5.17","dist":{"shasum":"bc68f94a2b02e9547ed7b413ec22c1a0ccf08ffd","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.5.17.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"directories":{}},"0.6.0":{"name":"xlsx","version":"0.6.0","author":{"name":"sheetjs"},"description":"XLSB / XLSX / XLSM (Excel 2007+ Spreadsheet) parser","keywords":["xlsx","xlsb","xlsm","office","excel","spreadsheet"],"bin":{"xlsx2csv":"./bin/xlsx2csv.njs"},"main":"./xlsx","dependencies":{"ssf":"~0.6.4","codepage":"","cfb":"","jszip":"~2.1.0","commander":""},"devDependencies":{"mocha":"","uglify-js":"","jasmine-node":"x"},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make mocha","test-jasmine":"jasmine-node --verbose tests/"},"config":{"blanket":{"pattern":"xlsx.js"}},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.8"},"homepage":"https://github.com/SheetJS/js-xlsx","_id":"xlsx@0.6.0","dist":{"shasum":"59914a8142dbfa2cc40f5f75957a7db30a6fd89e","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.6.0.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"directories":{}},"0.6.1":{"name":"xlsx","version":"0.6.1","author":{"name":"sheetjs"},"description":"XLSB / XLSX / XLSM (Excel 2007+ Spreadsheet) parser","keywords":["xlsx","xlsb","xlsm","office","excel","spreadsheet"],"bin":{"xlsx2csv":"./bin/xlsx2csv.njs"},"main":"./xlsx","dependencies":{"ssf":"~0.6.4","codepage":"1.x","cfb":"","jszip":"~2.2.0","commander":""},"devDependencies":{"mocha":"","uglify-js":"","jasmine-node":"x"},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make test","test-jasmine":"jasmine-node --verbose tests/"},"config":{"blanket":{"pattern":"xlsx.js"}},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.8"},"homepage":"https://github.com/SheetJS/js-xlsx","_id":"xlsx@0.6.1","dist":{"shasum":"15e9dd2a4093695d3fe806cc26ffccbad2339608","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.6.1.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"directories":{}},"0.6.1-a":{"name":"xlsx","version":"0.6.1-a","author":{"name":"sheetjs"},"description":"XLSB / XLSX / XLSM (Excel 2007+ Spreadsheet) parser","keywords":["xlsx","xlsb","xlsm","office","excel","spreadsheet"],"bin":{"xlsx2csv":"./bin/xlsx2csv.njs"},"main":"./xlsx","dependencies":{"ssf":"~0.6.4","codepage":"1.x","cfb":"","jszip":"2.2.0","commander":""},"devDependencies":{"mocha":"","uglify-js":"","jasmine-node":"x"},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make test","test-jasmine":"jasmine-node --verbose tests/"},"config":{"blanket":{"pattern":"xlsx.js"}},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.8"},"homepage":"https://github.com/SheetJS/js-xlsx","_id":"xlsx@0.6.1-a","dist":{"shasum":"b2f6569414391c3e3d7208bc5f7773dcee22f568","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.6.1-a.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"directories":{}},"0.6.2":{"name":"xlsx","version":"0.6.2","author":{"name":"sheetjs"},"description":"XLSB / XLSX / XLSM (Excel 2007+ Spreadsheet) parser","keywords":["xlsx","xlsb","xlsm","office","excel","spreadsheet"],"bin":{"xlsx2csv":"./bin/xlsx2csv.njs"},"main":"./xlsx","dependencies":{"ssf":"~0.6.4","codepage":"1.x","cfb":"","jszip":"2.2.0","commander":""},"devDependencies":{"mocha":"","uglify-js":"","jasmine-node":"x"},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make test","test-jasmine":"jasmine-node --verbose tests/"},"config":{"blanket":{"pattern":"xlsx.js"}},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.8"},"homepage":"https://github.com/SheetJS/js-xlsx","_id":"xlsx@0.6.2","dist":{"shasum":"3fa1d650c47fd4d9a649767ac5bf67a9509d034a","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.6.2.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"directories":{}},"0.7.0":{"name":"xlsx","version":"0.7.0","author":{"name":"sheetjs"},"description":"XLSB/XLSX/XLSM (Excel 2007+ Spreadsheet) parser and writer","keywords":["xlsx","xlsb","xlsm","office","excel","spreadsheet"],"bin":{"xlsx":"./bin/xlsx.njs"},"main":"./xlsx","dependencies":{"ssf":"~0.6.5","codepage":"1.x","cfb":"","jszip":"2.2.0","commander":""},"devDependencies":{"mocha":"","uglify-js":"","jasmine-node":"x"},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make test","test-jasmine":"jasmine-node --verbose tests/"},"config":{"blanket":{"pattern":"xlsx.js"}},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.8"},"homepage":"https://github.com/SheetJS/js-xlsx","_id":"xlsx@0.7.0","dist":{"shasum":"8169d2b747df502c08c00e25ae4d0d4174d31ea7","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.7.0.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"directories":{}},"0.7.1":{"name":"xlsx","version":"0.7.1","author":{"name":"sheetjs"},"description":"XLSB/XLSX/XLSM (Excel 2007+ Spreadsheet) parser and writer","keywords":["xlsx","xlsb","xlsm","office","excel","spreadsheet"],"bin":{"xlsx":"./bin/xlsx.njs"},"main":"./xlsx","dependencies":{"ssf":"~0.6.5","codepage":"1.x","cfb":"","jszip":"2.2.0","commander":""},"devDependencies":{"mocha":"","xlsjs":"","uglify-js":"","jasmine-node":"x"},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make test","test-jasmine":"jasmine-node --verbose tests/"},"config":{"blanket":{"pattern":"xlsx.js"}},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.8"},"homepage":"https://github.com/SheetJS/js-xlsx","_id":"xlsx@0.7.1","dist":{"shasum":"689a65da08b7d6cd2f750629cdef072efcb5455e","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.7.1.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"directories":{}},"0.7.2-a":{"name":"xlsx","version":"0.7.2-a","author":{"name":"sheetjs"},"description":"XLSB/XLSX/XLSM (Excel 2007+ Spreadsheet) parser and writer","keywords":["xlsx","xlsb","xlsm","office","excel","spreadsheet"],"bin":{"xlsx":"./bin/xlsx.njs"},"main":"./xlsx","dependencies":{"ssf":"~0.7.0","codepage":"1.x","cfb":">=0.9.1","jszip":"2.2.2","commander":""},"devDependencies":{"mocha":"","xlsjs":"","uglify-js":"","jasmine-node":"x"},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make test","test-jasmine":"jasmine-node --verbose tests/"},"config":{"blanket":{"pattern":"xlsx.js"}},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.8"},"homepage":"https://github.com/SheetJS/js-xlsx","_id":"xlsx@0.7.2-a","dist":{"shasum":"3b51336d3e2a4043fa69685293691681f3853df9","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.7.2-a.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"directories":{}},"0.7.3":{"name":"xlsx","version":"0.7.3","author":{"name":"sheetjs"},"description":"XLSB/XLSX/XLSM (Excel 2007+ Spreadsheet) parser and writer","keywords":["xlsx","xlsb","xlsm","office","excel","spreadsheet"],"bin":{"xlsx":"./bin/xlsx.njs"},"main":"./xlsx","dependencies":{"ssf":"~0.7.0","codepage":"1.x","cfb":">=0.9.1","jszip":"2.2.2","commander":""},"devDependencies":{"mocha":"","xlsjs":"","uglify-js":"","jasmine-node":"x"},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make test","test-jasmine":"jasmine-node --verbose tests/"},"config":{"blanket":{"pattern":"xlsx.js"}},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.8"},"homepage":"https://github.com/SheetJS/js-xlsx","_id":"xlsx@0.7.3","dist":{"shasum":"7ec6660ee2c7bfbb44a0298bebbf6b5e16107845","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.7.3.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"directories":{}},"0.7.4":{"name":"xlsx","version":"0.7.4","author":{"name":"sheetjs"},"description":"XLSB/XLSX/XLSM (Excel 2007+ Spreadsheet) parser and writer","keywords":["xlsx","xlsb","xlsm","office","excel","spreadsheet"],"bin":{"xlsx":"./bin/xlsx.njs"},"main":"./xlsx","dependencies":{"ssf":"~0.7.0","codepage":"1.x","cfb":">=0.9.1","jszip":"2.2.2","commander":""},"devDependencies":{"mocha":"","xlsjs":"","uglify-js":"","jasmine-node":"x"},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make test","test-jasmine":"jasmine-node --verbose tests/"},"config":{"blanket":{"pattern":"xlsx.js"}},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.8"},"homepage":"https://github.com/SheetJS/js-xlsx","_id":"xlsx@0.7.4","_shasum":"ad9b8871bfad08fb4868608cc151b309816a63c6","_from":".","_npmVersion":"1.4.9","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"dist":{"shasum":"ad9b8871bfad08fb4868608cc151b309816a63c6","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.7.4.tgz"},"directories":{}},"0.7.5":{"name":"xlsx","version":"0.7.5","author":{"name":"sheetjs"},"description":"XLSB/XLSX/XLSM (Excel 2007+ Spreadsheet) parser and writer","keywords":["xlsx","xlsb","xlsm","office","excel","spreadsheet"],"bin":{"xlsx":"./bin/xlsx.njs"},"main":"./xlsx","dependencies":{"ssf":"~0.7.0","codepage":"~1.2.0","cfb":">=0.9.1","jszip":"2.2.2","commander":""},"devDependencies":{"mocha":"","xlsjs":"","uglify-js":"","jasmine-node":"x"},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make test","test-jasmine":"jasmine-node --verbose tests/"},"config":{"blanket":{"pattern":"xlsx.js"}},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.8"},"homepage":"https://github.com/SheetJS/js-xlsx","_id":"xlsx@0.7.5","_shasum":"578b66cfce2fe1170a49030fff404d5bc824fcf9","_from":".","_npmVersion":"1.4.9","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"dist":{"shasum":"578b66cfce2fe1170a49030fff404d5bc824fcf9","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.7.5.tgz"},"directories":{}},"0.7.6-g":{"name":"xlsx","version":"0.7.6-g","author":{"name":"sheetjs"},"description":"Excel 2007+ spreadsheet (XLSB/XLSX/XLSM) parser and writer","keywords":["excel","xlsx","xlsb","xlsm","office","spreadsheet"],"bin":{"xlsx":"./bin/xlsx.njs"},"main":"./xlsx","dependencies":{"ssf":"~0.7.1","codepage":"~1.2.0","cfb":">=0.9.1","jszip":"2.2.2","commander":""},"devDependencies":{"mocha":"","xlsjs":"","uglify-js":"","jasmine-node":"x"},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make test","test-jasmine":"jasmine-node --verbose tests/"},"config":{"blanket":{"pattern":"xlsx.js"}},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.8"},"homepage":"https://github.com/SheetJS/js-xlsx","_id":"xlsx@0.7.6-g","_shasum":"39ff2f225a82da65b96eec9add49f1da1310fc85","_from":".","_npmVersion":"1.4.9","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"dist":{"shasum":"39ff2f225a82da65b96eec9add49f1da1310fc85","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.7.6-g.tgz"},"directories":{}},"0.7.6-h":{"name":"xlsx","version":"0.7.6-h","author":{"name":"sheetjs"},"description":"Excel 2007+ spreadsheet (XLSB/XLSX/XLSM) parser and writer","keywords":["excel","xlsx","xlsb","xlsm","office","spreadsheet"],"bin":{"xlsx":"./bin/xlsx.njs"},"main":"./xlsx","dependencies":{"ssf":"~0.7.1","codepage":"~1.3.1","cfb":">=0.9.1","jszip":"2.2.2","commander":""},"devDependencies":{"mocha":"","xlsjs":"","uglify-js":"","jasmine-node":"x"},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make test","test-jasmine":"jasmine-node --verbose tests/"},"config":{"blanket":{"pattern":"xlsx.js"}},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.8"},"gitHead":"662c550d9e269b4976eb162238bad23ae8946902","homepage":"https://github.com/SheetJS/js-xlsx","_id":"xlsx@0.7.6-h","_shasum":"1d425f29634083620c7f4d2eeb3761abef693202","_from":".","_npmVersion":"1.4.14","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"dist":{"shasum":"1d425f29634083620c7f4d2eeb3761abef693202","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.7.6-h.tgz"},"directories":{}},"0.7.6-i":{"name":"xlsx","version":"0.7.6-i","author":{"name":"sheetjs"},"description":"Excel 2007+ spreadsheet (XLSB/XLSX/XLSM) parser and writer","keywords":["excel","xlsx","xlsb","xlsm","office","spreadsheet"],"bin":{"xlsx":"./bin/xlsx.njs"},"main":"./xlsx","dependencies":{"ssf":"~0.7.1","codepage":"~1.3.1","cfb":">=0.9.1","jszip":"2.2.2","commander":""},"devDependencies":{"mocha":"","xlsjs":"","uglify-js":"","jasmine-node":"x"},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make test","test-jasmine":"jasmine-node --verbose tests/"},"config":{"blanket":{"pattern":"xlsx.js"}},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.8"},"gitHead":"aa46ada7b82259c233fecf0c5042c34b3195ac11","homepage":"https://github.com/SheetJS/js-xlsx","_id":"xlsx@0.7.6-i","_shasum":"208248ea8f65afebb275b712c7b220269453b77a","_from":".","_npmVersion":"1.4.14","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"dist":{"shasum":"208248ea8f65afebb275b712c7b220269453b77a","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.7.6-i.tgz"},"directories":{}},"0.7.7":{"name":"xlsx","version":"0.7.7","author":{"name":"sheetjs"},"description":"Excel 2007+ spreadsheet (XLSB/XLSX/XLSM) parser and writer","keywords":["excel","xlsx","xlsb","xlsm","office","spreadsheet"],"bin":{"xlsx":"./bin/xlsx.njs"},"main":"./xlsx","dependencies":{"ssf":"~0.8.1","codepage":"~1.3.1","cfb":">=0.10.0","jszip":"2.3.0","crc-32":"","adler-32":"","commander":""},"devDependencies":{"mocha":"","xlsjs":"","uglify-js":"","jasmine-node":"x"},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make test","test-jasmine":"jasmine-node --verbose tests/"},"config":{"blanket":{"pattern":"xlsx.js"}},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.8"},"gitHead":"6bc24374b9f04eb84be848cb9672ed4c2b2aa9f7","homepage":"https://github.com/SheetJS/js-xlsx","_id":"xlsx@0.7.7","_shasum":"9eb624b2a19cf8e9d69ba62efd398061c55fec3a","_from":".","_npmVersion":"1.4.14","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"dist":{"shasum":"9eb624b2a19cf8e9d69ba62efd398061c55fec3a","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.7.7.tgz"},"directories":{}},"0.7.8":{"name":"xlsx","version":"0.7.8","author":{"name":"sheetjs"},"description":"Excel 2007+ spreadsheet (XLSB/XLSX/XLSM) parser and writer","keywords":["excel","xlsx","xlsb","xlsm","office","spreadsheet"],"bin":{"xlsx":"./bin/xlsx.njs"},"main":"./xlsx","dependencies":{"ssf":"~0.8.1","codepage":"~1.3.4","cfb":">=0.10.0","jszip":"2.3.0","crc-32":"","adler-32":"","commander":""},"devDependencies":{"mocha":"","xlsjs":"","uglify-js":"","jasmine-node":"x"},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make test","test-jasmine":"jasmine-node --verbose tests/"},"config":{"blanket":{"pattern":"xlsx.js"}},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.8"},"gitHead":"dd5ac8bba323463584506e519ce71f3df5500169","homepage":"https://github.com/SheetJS/js-xlsx","_id":"xlsx@0.7.8","_shasum":"4cea4062200d4e4073da3b588dd29f61e366c4b0","_from":".","_npmVersion":"1.4.14","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"dist":{"shasum":"4cea4062200d4e4073da3b588dd29f61e366c4b0","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.7.8.tgz"},"directories":{}},"0.7.9":{"name":"xlsx","version":"0.7.9","author":{"name":"sheetjs"},"description":"Excel 2007+ spreadsheet (XLSB/XLSX/XLSM) parser and writer","keywords":["excel","xlsx","xlsb","xlsm","office","spreadsheet"],"bin":{"xlsx":"./bin/xlsx.njs"},"main":"./xlsx","dependencies":{"ssf":"~0.8.1","codepage":"~1.3.4","cfb":">=0.10.0","jszip":"2.4.0","crc-32":"","adler-32":"","commander":""},"devDependencies":{"mocha":"","xlsjs":"","uglify-js":"","jasmine-node":"x"},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make test","test-jasmine":"jasmine-node --verbose tests/"},"config":{"blanket":{"pattern":"xlsx.js"}},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.8"},"gitHead":"127a430e79cc883b0cb45cf436ca371d4d27a3e8","homepage":"https://github.com/SheetJS/js-xlsx","_id":"xlsx@0.7.9","_shasum":"6e31744421e064bd014c79843de46b02bd302e51","_from":".","_npmVersion":"1.4.23","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"dist":{"shasum":"6e31744421e064bd014c79843de46b02bd302e51","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.7.9.tgz"},"directories":{}},"0.7.10":{"name":"xlsx","version":"0.7.10","author":{"name":"sheetjs"},"description":"Excel 2007+ spreadsheet (XLSB/XLSX/XLSM) parser and writer","keywords":["excel","xlsx","xlsb","xlsm","office","spreadsheet"],"bin":{"xlsx":"./bin/xlsx.njs"},"main":"./xlsx","dependencies":{"ssf":"~0.8.1","codepage":"~1.3.4","cfb":">=0.10.0","jszip":"2.4.0","crc-32":"","adler-32":"","commander":""},"devDependencies":{"mocha":"","xlsjs":"","uglify-js":"","jasmine-node":"x"},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make test","test-jasmine":"jasmine-node --verbose tests/"},"config":{"blanket":{"pattern":"xlsx.js"}},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.8"},"gitHead":"19f3a6ae762640ee22d36710878f44e64afca884","homepage":"https://github.com/SheetJS/js-xlsx","_id":"xlsx@0.7.10","_shasum":"58d462b49da5ec2b08f9f6cf1f16784e90596900","_from":".","_npmVersion":"1.4.23","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"dist":{"shasum":"58d462b49da5ec2b08f9f6cf1f16784e90596900","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.7.10.tgz"},"directories":{}},"0.7.11":{"name":"xlsx","version":"0.7.11","author":{"name":"sheetjs"},"description":"Excel 2007+ spreadsheet (XLSB/XLSX/XLSM) and ODS parser and writer","keywords":["excel","xlsx","xlsb","xlsm","ods","office","spreadsheet"],"bin":{"xlsx":"./bin/xlsx.njs"},"main":"./xlsx","dependencies":{"ssf":"~0.8.1","codepage":"~1.3.4","cfb":">=0.10.0","jszip":"2.4.0","crc-32":"","adler-32":"","commander":""},"devDependencies":{"mocha":"","xlsjs":"","uglify-js":"","jasmine-node":"x"},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make test","test-jasmine":"jasmine-node --verbose tests/"},"config":{"blanket":{"pattern":"xlsx.js"}},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.8"},"gitHead":"61d2e55cc613c08f7cfa2a94dd3aa5ec411d635f","homepage":"https://github.com/SheetJS/js-xlsx","_id":"xlsx@0.7.11","_shasum":"7d438ce8ad2a75a4671e7340e121839a6d664c4d","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"dist":{"shasum":"7d438ce8ad2a75a4671e7340e121839a6d664c4d","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.7.11.tgz"},"directories":{}},"0.7.12":{"name":"xlsx","version":"0.7.12","author":{"name":"sheetjs"},"description":"Excel 2007+ spreadsheet (XLSB/XLSX/XLSM) and ODS parser and writer","keywords":["excel","xlsx","xlsb","xlsm","ods","office","spreadsheet"],"bin":{"xlsx":"./bin/xlsx.njs"},"main":"./xlsx","dependencies":{"ssf":"~0.8.1","codepage":"~1.3.6","cfb":">=0.10.0","jszip":"2.4.0","crc-32":"","adler-32":"","commander":""},"devDependencies":{"mocha":"","xlsjs":"","uglify-js":"","jasmine-node":"x"},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make test","test-jasmine":"jasmine-node --verbose tests/"},"config":{"blanket":{"pattern":"xlsx.js"}},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.8"},"gitHead":"f9097d403b44a0165ecb45dd9a798492b462b339","homepage":"https://github.com/SheetJS/js-xlsx","_id":"xlsx@0.7.12","_shasum":"7144831d8ecd49c062141f7c48975d1a400988e4","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"dist":{"shasum":"7144831d8ecd49c062141f7c48975d1a400988e4","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.7.12.tgz"},"directories":{}},"0.8.0":{"name":"xlsx","version":"0.8.0","author":{"name":"sheetjs"},"description":"Excel (XLSB/XLSX/XLSM/XLS/XML) and ODS spreadsheet parser and writer","keywords":["excel","xls","xlsx","xlsb","xlsm","ods","office","spreadsheet"],"bin":{"xlsx":"./bin/xlsx.njs"},"main":"./xlsx","dependencies":{"ssf":"~0.8.1","codepage":"~1.3.6","cfb":">=0.10.0","jszip":"2.4.0","crc-32":"","adler-32":"","commander":""},"devDependencies":{"mocha":"","xlsjs":"","uglify-js":""},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make test"},"config":{"blanket":{"pattern":"xlsx.js"}},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.8"},"gitHead":"704442c3a6ac8803df448fea6ef428cd88c4ff48","homepage":"https://github.com/SheetJS/js-xlsx","_id":"xlsx@0.8.0","_shasum":"253ca61c9e1e14aa4b905dece4ce4757ace99d26","_from":".","_npmVersion":"2.0.0","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"dist":{"shasum":"253ca61c9e1e14aa4b905dece4ce4757ace99d26","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.8.0.tgz"},"directories":{}},"0.8.1":{"name":"xlsx","version":"0.8.1","author":{"name":"sheetjs"},"description":"Excel (XLSB/XLSX/XLSM/XLS/XML) and ODS spreadsheet parser and writer","keywords":["excel","xls","xlsx","xlsb","xlsm","ods","office","spreadsheet"],"bin":{"xlsx":"./bin/xlsx.njs"},"main":"./xlsx","dependencies":{"exit-on-epipe":"","ssf":"~0.8.1","codepage":"","cfb":">=0.10.0","jszip":"2.4.0","crc-32":"","adler-32":"","commander":""},"devDependencies":{"mocha":"","xlsjs":"","uglify-js":""},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make test"},"config":{"blanket":{"pattern":"xlsx.js"}},"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.8"},"gitHead":"2a756fffccc30bf6871d7f04ede61a6fef160555","_id":"xlsx@0.8.1","_shasum":"346ef269dd470f3ae765a4764a8b901998f0256d","_from":".","_npmVersion":"3.10.10","_nodeVersion":"7.3.0","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"dist":{"shasum":"346ef269dd470f3ae765a4764a8b901998f0256d","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.8.1.tgz"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/xlsx-0.8.1.tgz_1483174201372_0.7684656719211489"},"directories":{}},"0.8.2":{"name":"xlsx","version":"0.8.2","author":{"name":"sheetjs"},"description":"Excel (XLSB/XLSX/XLSM/XLS/XML) and ODS spreadsheet parser and writer","keywords":["excel","xls","xlsx","xlsb","xlsm","ods","office","spreadsheet"],"bin":{"xlsx":"./bin/xlsx.njs"},"main":"./xlsx","dependencies":{"exit-on-epipe":"","ssf":"~0.8.1","codepage":"","cfb":">=0.10.0","jszip":"2.4.0","crc-32":"","adler-32":"","commander":""},"devDependencies":{"mocha":"","xlsjs":"","uglify-js":""},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make test"},"config":{"blanket":{"pattern":"xlsx.js"}},"homepage":"https://oss.sheetjs.com/js-xlsx/","bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.8"},"gitHead":"06670ae1815c6f817eb0f40ff43ffb4b7fd78908","_id":"xlsx@0.8.2","_shasum":"348c69eeadfe481594a915a222a19ad0daabb015","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.5.0","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"dist":{"shasum":"348c69eeadfe481594a915a222a19ad0daabb015","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.8.2.tgz"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/xlsx-0.8.2.tgz_1486167046547_0.5005702853668481"},"directories":{}},"0.8.3":{"name":"xlsx","version":"0.8.3","author":{"name":"sheetjs"},"description":"Excel (XLSB/XLSX/XLSM/XLS/XML) and ODS spreadsheet parser and writer","keywords":["excel","xls","xlsx","xlsb","xlsm","ods","office","spreadsheet"],"bin":{"xlsx":"./bin/xlsx.njs"},"main":"./xlsx","dependencies":{"exit-on-epipe":"","ssf":"~0.8.1","codepage":"","cfb":">=0.10.0","crc-32":"","adler-32":"","commander":""},"devDependencies":{"mocha":"","xlsjs":"","uglify-js":""},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make test"},"config":{"blanket":{"pattern":"xlsx.js"}},"homepage":"https://oss.sheetjs.com/js-xlsx/","bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.8"},"gitHead":"ab2ecebac9eea6dab16fbfde377b48422d657046","_id":"xlsx@0.8.3","_shasum":"454bac7a7233ab2214ae829c30f12f22aa52d285","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.5.0","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"dist":{"shasum":"454bac7a7233ab2214ae829c30f12f22aa52d285","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.8.3.tgz"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/xlsx-0.8.3.tgz_1486777871910_0.24821052863262594"},"directories":{}},"0.8.4":{"name":"xlsx","version":"0.8.4","author":{"name":"sheetjs"},"description":"Excel (XLSB/XLSX/XLSM/XLS/XML) and ODS spreadsheet parser and writer","keywords":["excel","xls","xlsx","xlsb","xlsm","ods","office","spreadsheet"],"bin":{"xlsx":"./bin/xlsx.njs"},"main":"./xlsx","dependencies":{"exit-on-epipe":"","ssf":"~0.8.1","codepage":"","cfb":">=0.10.0","crc-32":"","adler-32":"","commander":""},"devDependencies":{"mocha":"","xlsjs":"","uglify-js":""},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make test"},"config":{"blanket":{"pattern":"xlsx.js"}},"homepage":"https://oss.sheetjs.com/js-xlsx/","bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.8"},"gitHead":"d7ecca0e8b3dc04183fca309e5e3d87f6c4f8197","_id":"xlsx@0.8.4","_shasum":"921f457aac22538ac9a70d32cc2402ae3c4f74db","_from":".","_npmVersion":"2.15.11","_nodeVersion":"4.7.3","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"dist":{"shasum":"921f457aac22538ac9a70d32cc2402ae3c4f74db","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.8.4.tgz"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/xlsx-0.8.4.tgz_1487538502045_0.3070203009992838"},"directories":{}},"0.8.5":{"name":"xlsx","version":"0.8.5","author":{"name":"sheetjs"},"description":"Excel (XLSB/XLSX/XLSM/XLS/XML) and ODS (ODS/FODS/UOS) spreadsheet parser and writer","keywords":["excel","xls","xlsx","xlsb","xlsm","ods","office","spreadsheet"],"bin":{"xlsx":"./bin/xlsx.njs"},"main":"./xlsx","dependencies":{"exit-on-epipe":"","ssf":"~0.8.1","codepage":"","cfb":">=0.10.0","crc-32":"","adler-32":"","commander":""},"devDependencies":{"mocha":"","xlsjs":"","uglify-js":""},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make test"},"config":{"blanket":{"pattern":"xlsx.js"}},"homepage":"https://oss.sheetjs.com/js-xlsx/","bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.8"},"gitHead":"7683e213eaeab6dfa91fa602d850820cb0ab7bf4","_id":"xlsx@0.8.5","_shasum":"adc70c4bde2d1304b9ecc988369a9f8c55499c90","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.6.0","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"dist":{"shasum":"adc70c4bde2d1304b9ecc988369a9f8c55499c90","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.8.5.tgz"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/xlsx-0.8.5.tgz_1487750102153_0.7291196237783879"},"directories":{}},"0.8.6":{"name":"xlsx","version":"0.8.6","author":{"name":"sheetjs"},"description":"Excel (XLSB/XLSX/XLSM/XLS/XML) and ODS (ODS/FODS/UOS) spreadsheet parser and writer","keywords":["excel","xls","xlsx","xlsb","xlsm","ods","office","spreadsheet"],"bin":{"xlsx":"./bin/xlsx.njs"},"main":"./xlsx","dependencies":{"exit-on-epipe":"","ssf":"~0.8.1","codepage":"","cfb":"~0.11.0","crc-32":"","adler-32":"","commander":""},"devDependencies":{"mocha":"","xlsjs":"","uglify-js":""},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make test"},"config":{"blanket":{"pattern":"xlsx.js"}},"homepage":"https://oss.sheetjs.com/js-xlsx/","bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.8"},"gitHead":"5ae6b1965bfe3764656a96f536b356cd1586fec7","_id":"xlsx@0.8.6","_shasum":"52ed85745495835f5625e438e8377498b9d2e7e7","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.6.0","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"dist":{"shasum":"52ed85745495835f5625e438e8377498b9d2e7e7","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.8.6.tgz"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/xlsx-0.8.6.tgz_1487934742044_0.23112013703212142"},"directories":{}},"0.8.7":{"name":"xlsx","version":"0.8.7","author":{"name":"sheetjs"},"description":"Excel (XLSB/XLSX/XLSM/XLS/XML) and ODS (ODS/FODS/UOS) spreadsheet parser and writer","keywords":["excel","xls","xlsx","xlsb","xlsm","ods","office","spreadsheet"],"bin":{"xlsx":"./bin/xlsx.njs"},"main":"./xlsx","browser":{"node":false,"crypto":false,"fs":false,"../xlsx.js":false},"dependencies":{"exit-on-epipe":"","ssf":"~0.8.1","codepage":"","cfb":"~0.11.0","crc-32":"","adler-32":"","commander":""},"devDependencies":{"mocha":"","xlsjs":"","uglify-js":""},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make test"},"config":{"blanket":{"pattern":"xlsx.js"}},"homepage":"https://oss.sheetjs.com/js-xlsx/","bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.8"},"gitHead":"3d1f0f79ca0a7854cd2fdc5d7b8c4b844d39e139","_id":"xlsx@0.8.7","_shasum":"743fd94e0e7fce513fb0599015fdda4b2df34f68","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.7.1","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"dist":{"shasum":"743fd94e0e7fce513fb0599015fdda4b2df34f68","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.8.7.tgz"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/xlsx-0.8.7.tgz_1488676858517_0.32775995368137956"},"directories":{}},"0.8.8":{"name":"xlsx","version":"0.8.8","author":{"name":"sheetjs"},"description":"Excel (XLSB/XLSX/XLSM/XLS/XML) and ODS (ODS/FODS/UOS) spreadsheet parser and writer","keywords":["excel","xls","xlsx","xlsb","xlsm","ods","office","spreadsheet"],"bin":{"xlsx":"./bin/xlsx.njs"},"main":"./xlsx","browser":{"node":false,"crypto":false,"fs":false,"../xlsx.js":false},"dependencies":{"exit-on-epipe":"","ssf":"~0.8.1","codepage":"","cfb":"~0.11.0","crc-32":"","adler-32":"","commander":""},"devDependencies":{"mocha":"","xlsjs":"","uglify-js":""},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make test"},"config":{"blanket":{"pattern":"xlsx.js"}},"homepage":"https://oss.sheetjs.com/js-xlsx/","bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.8"},"gitHead":"7b6fb7b327eed15703c980a5675140d628fc09d3","_id":"xlsx@0.8.8","_shasum":"b92d76e0b5e4f060c9208d4b744756510443853a","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.7.2","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"dist":{"shasum":"b92d76e0b5e4f060c9208d4b744756510443853a","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.8.8.tgz"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/xlsx-0.8.8.tgz_1489041743559_0.6318800146691501"},"directories":{}},"0.9.0":{"name":"xlsx","version":"0.9.0","author":{"name":"sheetjs"},"description":"Excel (XLSB/XLSX/XLSM/XLS/XML) and ODS (ODS/FODS/UOS) spreadsheet parser and writer","keywords":["excel","xls","xlsx","xlsb","xlsm","ods","office","spreadsheet"],"bin":{"xlsx":"./bin/xlsx.njs"},"main":"./xlsx","browser":{"node":false,"crypto":false,"fs":false},"dependencies":{"exit-on-epipe":"","ssf":"~0.8.1","codepage":"","cfb":"~0.11.0","crc-32":"","adler-32":"","commander":""},"devDependencies":{"mocha":"","xlsjs":"","uglify-js":""},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make test"},"config":{"blanket":{"pattern":"xlsx.js"}},"homepage":"https://oss.sheetjs.com/js-xlsx/","bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.8"},"gitHead":"54b528eaede80e86aec32fbbd268027b239b471a","_id":"xlsx@0.9.0","_shasum":"e1992a613e7686c4a226d8c1b06e05d474c7de1c","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.7.2","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"dist":{"shasum":"e1992a613e7686c4a226d8c1b06e05d474c7de1c","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.9.0.tgz"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/xlsx-0.9.0.tgz_1489110271113_0.5391368796117604"},"directories":{}},"0.9.1":{"name":"xlsx","version":"0.9.1","author":{"name":"sheetjs"},"description":"Excel (XLSB/XLSX/XLSM/XLS/XML) and ODS (ODS/FODS/UOS) spreadsheet parser and writer","keywords":["excel","xls","xlsx","xlsb","xlsm","ods","office","spreadsheet"],"bin":{"xlsx":"./bin/xlsx.njs"},"main":"./xlsx","browser":{"node":false,"crypto":false,"fs":false},"dependencies":{"exit-on-epipe":"","ssf":"~0.8.1","codepage":"~1.7.0","cfb":"~0.11.0","crc-32":"","adler-32":"","commander":""},"devDependencies":{"mocha":"","xlsjs":"","uglify-js":""},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make test"},"config":{"blanket":{"pattern":"xlsx.js"}},"homepage":"https://oss.sheetjs.com/js-xlsx/","bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.8"},"gitHead":"71c23d9e2a0fb100b072357dc653dd81e8d78017","_id":"xlsx@0.9.1","_shasum":"6de024bd7ba2b25fc327abcd9af72fb939190c58","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.7.2","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"dist":{"shasum":"6de024bd7ba2b25fc327abcd9af72fb939190c58","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.9.1.tgz"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/xlsx-0.9.1.tgz_1489190440942_0.589444732060656"},"directories":{}},"0.9.2":{"name":"xlsx","version":"0.9.2","author":{"name":"sheetjs"},"description":"Excel (XLSB/XLSX/XLSM/XLS/XML) and ODS (ODS/FODS/UOS) spreadsheet parser and writer","keywords":["excel","xls","xlsx","xlsb","xlsm","ods","office","spreadsheet"],"bin":{"xlsx":"./bin/xlsx.njs"},"main":"./xlsx","browser":{"node":false,"crypto":false,"fs":false},"dependencies":{"exit-on-epipe":"~1.0.0","ssf":"~0.8.1","codepage":"~1.7.0","cfb":"~0.11.0","crc-32":"~1.0.0","adler-32":"~1.0.0","commander":"~2.9.0"},"devDependencies":{"mocha":"","xlsjs":"","uglify-js":""},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make test"},"config":{"blanket":{"pattern":"xlsx.js"}},"homepage":"https://oss.sheetjs.com/js-xlsx/","bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.8"},"gitHead":"456ab63dc420cc011b1dffd2d61df8e8f12329e5","_id":"xlsx@0.9.2","_shasum":"ab1a336e0eb960bd26adf86a47a2394b050ca0bb","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.7.2","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"dist":{"shasum":"ab1a336e0eb960bd26adf86a47a2394b050ca0bb","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.9.2.tgz"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/xlsx-0.9.2.tgz_1489390155506_0.9617145634256303"},"directories":{}},"0.9.3":{"name":"xlsx","version":"0.9.3","author":{"name":"sheetjs"},"description":"Excel (XLSB/XLSX/XLSM/XLS/XML) and ODS (ODS/FODS/UOS) spreadsheet parser and writer","keywords":["excel","xls","xlsx","xlsb","xlsm","ods","office","spreadsheet"],"bin":{"xlsx":"./bin/xlsx.njs"},"main":"./xlsx","browser":{"node":false,"crypto":false,"fs":false},"dependencies":{"exit-on-epipe":"~1.0.0","ssf":"~0.8.1","codepage":"~1.7.0","cfb":"~0.11.0","crc-32":"~1.0.0","adler-32":"~1.0.0","commander":"~2.9.0"},"devDependencies":{"mocha":"","xlsjs":"","uglify-js":""},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make travis"},"config":{"blanket":{"pattern":"xlsx.js"}},"homepage":"https://oss.sheetjs.com/js-xlsx/","bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.8"},"_id":"xlsx@0.9.3","_shasum":"46512ac09b342f6e883f737d1d4b25d667f0c94a","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.7.3","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"dist":{"shasum":"46512ac09b342f6e883f737d1d4b25d667f0c94a","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.9.3.tgz"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/xlsx-0.9.3.tgz_1489639577787_0.589506150688976"},"directories":{}},"0.9.4":{"name":"xlsx","version":"0.9.4","author":{"name":"sheetjs"},"description":"Excel (XLSB/XLSX/XLSM/XLS/XML) and ODS (ODS/FODS/UOS) spreadsheet parser and writer","keywords":["excel","xls","xlsx","xlsb","xlsm","ods","office","spreadsheet"],"bin":{"xlsx":"./bin/xlsx.njs"},"main":"./xlsx","browser":{"node":false,"crypto":false,"fs":false},"dependencies":{"exit-on-epipe":"~1.0.0","ssf":"~0.8.1","codepage":"~1.7.0","cfb":"~0.11.0","crc-32":"~1.0.0","adler-32":"~1.0.0","commander":"~2.9.0"},"devDependencies":{"mocha":"","xlsjs":"","uglify-js":""},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make travis"},"config":{"blanket":{"pattern":"xlsx.js"}},"homepage":"https://oss.sheetjs.com/js-xlsx/","bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.8"},"gitHead":"3cacfc406cd0bd5ce5b428517c1f7953b766d4f9","_id":"xlsx@0.9.4","_shasum":"e4ef9397552ed6d0e040176a7cd9342ce8eef6ed","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.7.3","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"dist":{"shasum":"e4ef9397552ed6d0e040176a7cd9342ce8eef6ed","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.9.4.tgz"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/xlsx-0.9.4.tgz_1490047755625_0.5089759728871286"},"directories":{}},"0.9.5":{"name":"xlsx","version":"0.9.5","author":{"name":"sheetjs"},"description":"Excel (XLSB/XLSX/XLSM/XLS/XML) and ODS (ODS/FODS/UOS) spreadsheet parser and writer","keywords":["excel","xls","xlsx","xlsb","xlsm","ods","office","spreadsheet"],"bin":{"xlsx":"./bin/xlsx.njs"},"main":"./xlsx","browser":{"node":false,"crypto":false,"fs":false},"dependencies":{"exit-on-epipe":"~1.0.0","ssf":"~0.9.0","codepage":"~1.7.0","cfb":"~0.11.0","crc-32":"~1.0.0","adler-32":"~1.0.0","commander":"~2.9.0"},"devDependencies":{"mocha":"","xlsjs":"","uglify-js":""},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make travis"},"config":{"blanket":{"pattern":"xlsx.js"}},"homepage":"https://oss.sheetjs.com/js-xlsx/","bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.8"},"gitHead":"69782ca211c80de773cecaba96de901a7dbe3848","_id":"xlsx@0.9.5","_shasum":"dc1089e5759de44d450dbbf8e2d6e68a12f64d90","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.7.4","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"dist":{"shasum":"dc1089e5759de44d450dbbf8e2d6e68a12f64d90","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.9.5.tgz"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/xlsx-0.9.5.tgz_1490234646313_0.19886178523302078"},"directories":{}},"0.9.6":{"name":"xlsx","version":"0.9.6","author":{"name":"sheetjs"},"description":"Excel (XLSB/XLSX/XLSM/XLS/XML) and ODS (ODS/FODS/UOS) spreadsheet parser and writer","keywords":["excel","xls","xlsx","xlsb","xlsm","ods","office","spreadsheet"],"bin":{"xlsx":"./bin/xlsx.njs"},"main":"./xlsx","browser":{"node":false,"crypto":false,"fs":false},"dependencies":{"exit-on-epipe":"~1.0.0","ssf":"~0.9.0","codepage":"~1.7.0","cfb":"~0.11.0","crc-32":"~1.0.0","adler-32":"~1.0.0","commander":"~2.9.0"},"devDependencies":{"mocha":"","xlsjs":"","uglify-js":""},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make travis"},"config":{"blanket":{"pattern":"xlsx.js"}},"homepage":"https://oss.sheetjs.com/js-xlsx/","bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.8"},"gitHead":"471275b7619267b8697794bcba859a3297caa228","_id":"xlsx@0.9.6","_shasum":"6a1062c4ced8407866da3183c6d96b48fdc8b1ee","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.7.4","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"dist":{"shasum":"6a1062c4ced8407866da3183c6d96b48fdc8b1ee","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.9.6.tgz"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/xlsx-0.9.6.tgz_1490481935732_0.9853562549687922"},"directories":{}},"0.9.7":{"name":"xlsx","version":"0.9.7","author":{"name":"sheetjs"},"description":"Excel (XLSB/XLSX/XLSM/XLS/XML) and ODS (ODS/FODS/UOS) spreadsheet parser and writer","keywords":["excel","xls","xlsx","xlsb","xlsm","ods","office","spreadsheet"],"bin":{"xlsx":"./bin/xlsx.njs"},"main":"./xlsx","browser":{"node":false,"crypto":false,"fs":false},"dependencies":{"exit-on-epipe":"~1.0.0","ssf":"~0.9.0","codepage":"~1.8.0","cfb":"~0.11.0","crc-32":"~1.0.0","adler-32":"~1.0.0","commander":"~2.9.0"},"devDependencies":{"mocha":"","xlsjs":"","uglify-js":""},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make travis"},"config":{"blanket":{"pattern":"xlsx.js"}},"homepage":"https://oss.sheetjs.com/js-xlsx/","bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.8"},"gitHead":"b89a876076f7b8441021b27650595db6e2a7f08d","_id":"xlsx@0.9.7","_shasum":"34e51bff475d0ff2350db569fa53da29fdfd3c29","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.7.4","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"dist":{"shasum":"34e51bff475d0ff2350db569fa53da29fdfd3c29","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.9.7.tgz"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/xlsx-0.9.7.tgz_1490739469683_0.8449174263514578"},"directories":{}},"0.9.8":{"name":"xlsx","version":"0.9.8","author":{"name":"sheetjs"},"description":"Excel (XLSB/XLSX/XLSM/XLS/XML) and ODS (ODS/FODS/UOS) spreadsheet parser and writer","keywords":["excel","xls","xlsx","xlsb","xlsm","ods","office","spreadsheet"],"bin":{"xlsx":"./bin/xlsx.njs"},"main":"./xlsx","browser":{"node":false,"crypto":false,"fs":false},"dependencies":{"exit-on-epipe":"~1.0.0","ssf":"~0.9.0","codepage":"~1.8.0","cfb":"~0.11.1","crc-32":"~1.0.0","adler-32":"~1.0.0","commander":"~2.9.0"},"devDependencies":{"mocha":"","xlsjs":"","uglify-js":""},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make travis"},"config":{"blanket":{"pattern":"xlsx.js"}},"homepage":"https://oss.sheetjs.com/js-xlsx/","bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.8"},"gitHead":"e42cf43c02767c92175a78812d69c1ac76eeb845","_id":"xlsx@0.9.8","_shasum":"ab301a81f810849a82973473ba08230a9d385386","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.7.4","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"dist":{"shasum":"ab301a81f810849a82973473ba08230a9d385386","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.9.8.tgz"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/xlsx-0.9.8.tgz_1490997736427_0.1292000573594123"},"directories":{}},"0.9.9":{"name":"xlsx","version":"0.9.9","author":{"name":"sheetjs"},"description":"Excel (XLSB/XLSX/XLSM/XLS/XML) and ODS (ODS/FODS/UOS) spreadsheet parser and writer","keywords":["excel","xls","xlsx","xlsb","xlsm","ods","office","spreadsheet"],"bin":{"xlsx":"./bin/xlsx.njs"},"main":"./xlsx","browser":{"node":false,"crypto":false,"fs":false},"dependencies":{"exit-on-epipe":"~1.0.0","ssf":"~0.9.0","codepage":"~1.8.0","cfb":"~0.11.1","crc-32":"~1.0.0","adler-32":"~1.0.0","commander":"~2.9.0"},"devDependencies":{"mocha":"","xlsjs":"","uglify-js":""},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make travis"},"config":{"blanket":{"pattern":"xlsx.js"}},"homepage":"https://oss.sheetjs.com/js-xlsx/","bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.8"},"gitHead":"01d1c32fa13a857c2fa23d89baa069c3aad51788","_id":"xlsx@0.9.9","_shasum":"85a628139f0dd9c9bc36c5cc42cb27cdd831dfa4","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.7.4","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"dist":{"shasum":"85a628139f0dd9c9bc36c5cc42cb27cdd831dfa4","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.9.9.tgz"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/xlsx-0.9.9.tgz_1491200651711_0.7646330988500267"},"directories":{}},"0.9.10":{"name":"xlsx","version":"0.9.10","author":{"name":"sheetjs"},"description":"Excel (XLSB/XLSX/XLSM/XLS/XML) and ODS (ODS/FODS/UOS) spreadsheet parser and writer","keywords":["excel","xls","xlsx","xlsb","xlsm","ods","office","spreadsheet"],"bin":{"xlsx":"./bin/xlsx.njs"},"main":"./xlsx","browser":{"node":false,"crypto":false,"stream":false,"fs":false},"dependencies":{"exit-on-epipe":"~1.0.0","ssf":"~0.9.0","codepage":"~1.8.0","cfb":"~0.11.1","crc-32":"~1.0.0","adler-32":"~1.0.0","commander":"~2.9.0"},"devDependencies":{"mocha":"","xlsjs":"","uglify-js":""},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make travis"},"config":{"blanket":{"pattern":"xlsx.js"}},"homepage":"https://oss.sheetjs.com/js-xlsx/","bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.8"},"gitHead":"51182e57efe0b695bc7a616927799a8e01465830","_id":"xlsx@0.9.10","_shasum":"86434dd92fc743d8fced728c3e1e373b22ca2820","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.7.4","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"dist":{"shasum":"86434dd92fc743d8fced728c3e1e373b22ca2820","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.9.10.tgz"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/xlsx-0.9.10.tgz_1491711723807_0.049218264408409595"},"directories":{}},"0.9.11":{"name":"xlsx","version":"0.9.11","author":{"name":"sheetjs"},"description":"Excel (XLSB/XLSX/XLSM/XLS/XML) and ODS (ODS/FODS/UOS) spreadsheet parser and writer","keywords":["excel","xls","xlsx","xlsb","xlsm","ods","office","spreadsheet"],"bin":{"xlsx":"./bin/xlsx.njs"},"main":"./xlsx","browser":{"node":false,"crypto":false,"stream":false,"fs":false},"dependencies":{"exit-on-epipe":"~1.0.0","ssf":"~0.9.0","codepage":"~1.8.0","cfb":"~0.11.1","crc-32":"~1.0.0","adler-32":"~1.0.0","commander":"~2.9.0"},"devDependencies":{"mocha":"","xlsjs":"","uglify-js":""},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make travis"},"config":{"blanket":{"pattern":"xlsx.js"}},"homepage":"https://oss.sheetjs.com/js-xlsx/","bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.8"},"gitHead":"f51feb375a0072ae15461955f37d0047fdf521c8","_id":"xlsx@0.9.11","_shasum":"cafd6b052acdedd85cfc4798fb1b8aa86adf1e32","_from":".","_npmVersion":"4.5.0","_nodeVersion":"7.9.0","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"dist":{"shasum":"cafd6b052acdedd85cfc4798fb1b8aa86adf1e32","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.9.11.tgz"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/xlsx-0.9.11.tgz_1492329857175_0.9092787986155599"},"directories":{}},"0.9.12":{"name":"xlsx","version":"0.9.12","author":{"name":"sheetjs"},"description":"Excel (XLSB/XLSX/XLSM/XLS/XML) and ODS (ODS/FODS/UOS) spreadsheet parser and writer","keywords":["excel","xls","xlsx","xlsb","xlsm","ods","office","spreadsheet"],"bin":{"xlsx":"./bin/xlsx.njs"},"main":"./xlsx","browser":{"node":false,"crypto":false,"stream":false,"fs":false},"dependencies":{"exit-on-epipe":"~1.0.0","ssf":"~0.9.0","codepage":"~1.8.0","cfb":"~0.11.1","crc-32":"~1.0.0","adler-32":"~1.0.0","commander":"~2.9.0"},"devDependencies":{"mocha":"","xlsjs":"","uglify-js":""},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make travis"},"config":{"blanket":{"pattern":"xlsx.js"}},"homepage":"http://sheetjs.com/opensource","bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.8"},"gitHead":"8c4f1f4e84c7ca8e9bd2ca9e0204034b29d0bb02","_id":"xlsx@0.9.12","_shasum":"97c558ba71dab088ce8949a4100b8774079601f2","_from":".","_npmVersion":"4.5.0","_nodeVersion":"7.9.0","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"dist":{"shasum":"97c558ba71dab088ce8949a4100b8774079601f2","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.9.12.tgz"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/xlsx-0.9.12.tgz_1492812914748_0.7934930906631052"},"directories":{}},"0.9.13":{"name":"xlsx","version":"0.9.13","author":{"name":"sheetjs"},"description":"Excel (XLSB/XLSX/XLSM/XLS/XML) and ODS (ODS/FODS/UOS) spreadsheet parser and writer","keywords":["excel","xls","xlsx","xlsb","xlsm","ods","office","spreadsheet"],"bin":{"xlsx":"./bin/xlsx.njs"},"main":"./xlsx","browser":{"node":false,"crypto":false,"stream":false,"process":false,"fs":false},"dependencies":{"exit-on-epipe":"~1.0.0","ssf":"~0.9.1","codepage":"~1.8.0","cfb":"~0.11.1","crc-32":"~1.0.2","adler-32":"~1.0.0","commander":"~2.9.0"},"devDependencies":{"mocha":"","xlsjs":"","uglify-js":""},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"scripts":{"pretest":"git submodule init && git submodule update","test":"make travis"},"config":{"blanket":{"pattern":"xlsx.js"}},"homepage":"http://sheetjs.com/opensource","bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","engines":{"node":">=0.8"},"_id":"xlsx@0.9.13","_shasum":"5861d11e10a1f99b6f2b491e2d119a7777d066e7","_from":".","_npmVersion":"4.5.0","_nodeVersion":"7.9.0","_npmUser":{"name":"sheetjs","email":"dev@sheetjs.com"},"dist":{"shasum":"5861d11e10a1f99b6f2b491e2d119a7777d066e7","tarball":"https://registry.npmjs.org/xlsx/-/xlsx-0.9.13.tgz"},"maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/xlsx-0.9.13.tgz_1493571308522_0.12690789229236543"},"directories":{}}},"readme":"# [SheetJS js-xlsx](http://sheetjs.com)\n\nParser and writer for various spreadsheet formats.  Pure-JS cleanroom\nimplementation from official specifications, related documents, and test files.\nEmphasis on parsing and writing robustness, cross-format feature compatibility\nwith a unified JS representation, and ES3/ES5 browser compatibility back to IE6.\n\nThis is the community version.  We also offer a pro version with performance\nenhancements and additional features by request.\n\n[**Pro Version**](http://sheetjs.com/pro)\n\n[**Commercial Support**](http://sheetjs.com/support)\n\n[**Rendered Documentation**](https://sheetjs.gitbooks.io/docs/)\n\n[**In-Browser Demos**](http://sheetjs.com/demos)\n\n[**Source Code**](http://git.io/xlsx)\n\n[**File format support for known spreadsheet data formats:**](#file-formats)\n\n![circo graph of format support](formats.png)\n\n![graph legend](legend.png)\n\n\n## Table of Contents\n\n<!-- toc -->\n\n- [Installation](#installation)\n  * [JS Ecosystem Demos](#js-ecosystem-demos)\n  * [Optional Modules](#optional-modules)\n  * [ECMAScript 5 Compatibility](#ecmascript-5-compatibility)\n- [Parsing Workbooks](#parsing-workbooks)\n  * [Note on Streaming Read](#note-on-streaming-read)\n- [Working with the Workbook](#working-with-the-workbook)\n- [Writing Workbooks](#writing-workbooks)\n  * [Streaming Write](#streaming-write)\n- [Interface](#interface)\n  * [Parsing functions](#parsing-functions)\n  * [Writing functions](#writing-functions)\n  * [Utilities](#utilities)\n- [Common Spreadsheet Format](#common-spreadsheet-format)\n  * [General Structures](#general-structures)\n  * [Cell Object](#cell-object)\n    + [Data Types](#data-types)\n    + [Dates](#dates)\n  * [Sheet Objects](#sheet-objects)\n    + [Worksheet Object](#worksheet-object)\n    + [Chartsheet Object](#chartsheet-object)\n  * [Workbook Object](#workbook-object)\n    + [Workbook File Properties](#workbook-file-properties)\n  * [Workbook-Level Attributes](#workbook-level-attributes)\n    + [Defined Names](#defined-names)\n  * [Document Features](#document-features)\n    + [Formulae](#formulae)\n    + [Column Properties](#column-properties)\n    + [Row Properties](#row-properties)\n    + [Number Formats](#number-formats)\n    + [Hyperlinks](#hyperlinks)\n    + [Cell Comments](#cell-comments)\n    + [Sheet Visibility](#sheet-visibility)\n- [Parsing Options](#parsing-options)\n  * [Input Type](#input-type)\n  * [Guessing File Type](#guessing-file-type)\n- [Writing Options](#writing-options)\n  * [Supported Output Formats](#supported-output-formats)\n  * [Output Type](#output-type)\n- [Utility Functions](#utility-functions)\n  * [Array of Arrays Input](#array-of-arrays-input)\n  * [HTML Table Input](#html-table-input)\n  * [Formulae Output](#formulae-output)\n  * [Delimiter-Separated Output](#delimiter-separated-output)\n    + [UTF-16 Unicode Text](#utf-16-unicode-text)\n  * [JSON](#json)\n- [File Formats](#file-formats)\n  * [Excel 2007+ XML (XLSX/XLSM)](#excel-2007-xml-xlsxxlsm)\n  * [Excel 2.0-95 (BIFF2/BIFF3/BIFF4/BIFF5)](#excel-20-95-biff2biff3biff4biff5)\n  * [Excel 97-2004 Binary (BIFF8)](#excel-97-2004-binary-biff8)\n  * [Excel 2003-2004 (SpreadsheetML)](#excel-2003-2004-spreadsheetml)\n  * [Excel 2007+ Binary (XLSB, BIFF12)](#excel-2007-binary-xlsb-biff12)\n  * [Delimiter-Separated Values (CSV/TXT)](#delimiter-separated-values-csvtxt)\n  * [Other Workbook Formats](#other-workbook-formats)\n    + [Lotus 1-2-3 (WKS/WK1/WK2/WK3/WK4/123)](#lotus-1-2-3-wkswk1wk2wk3wk4123)\n    + [Quattro Pro (WQ1/WQ2/WB1/WB2/WB3/QPW)](#quattro-pro-wq1wq2wb1wb2wb3qpw)\n    + [OpenDocument Spreadsheet (ODS/FODS)](#opendocument-spreadsheet-odsfods)\n    + [Uniform Office Spreadsheet (UOS1/2)](#uniform-office-spreadsheet-uos12)\n  * [Other Single-Worksheet Formats](#other-single-worksheet-formats)\n    + [dBASE and Visual FoxPro (DBF)](#dbase-and-visual-foxpro-dbf)\n    + [Symbolic Link (SYLK)](#symbolic-link-sylk)\n    + [Lotus Formatted Text (PRN)](#lotus-formatted-text-prn)\n    + [Data Interchange Format (DIF)](#data-interchange-format-dif)\n    + [HTML](#html)\n- [Testing](#testing)\n  * [Node](#node)\n  * [Browser](#browser)\n  * [Tested Environments](#tested-environments)\n  * [Test Files](#test-files)\n- [Contributing](#contributing)\n  * [Tests](#tests)\n  * [OSX/Linux](#osxlinux)\n  * [Windows](#windows)\n- [License](#license)\n- [References](#references)\n- [Badges](#badges)\n\n<!-- tocstop -->\n\n## Installation\n\nWith [npm](https://www.npmjs.org/package/xlsx):\n\n```bash\n$ npm install xlsx\n```\n\nIn the browser:\n\n```html\n<script lang=\"javascript\" src=\"dist/xlsx.core.min.js\"></script>\n```\n\nWith [bower](http://bower.io/search/?q=js-xlsx):\n\n```bash\n$ bower install js-xlsx\n```\n\nCDNjs automatically pulls the latest version and makes all versions available at\n<http://cdnjs.com/libraries/xlsx>\n\n### JS Ecosystem Demos\n\nThe `demos` directory includes sample projects for:\n\n- [`angular`](demos/angular/)\n- [`browserify`](demos/browserify/)\n- [`Adobe ExtendScript`](demos/extendscript/)\n- [`phantomjs`](demos/phantomjs/)\n- [`requirejs`](demos/requirejs/)\n- [`systemjs`](demos/systemjs/)\n- [`webpack`](demos/webpack/)\n\n### Optional Modules\n\nThe node version automatically requires modules for additional features.  Some\nof these modules are rather large in size and are only needed in special\ncircumstances, so they do not ship with the core.  For browser use, they must\nbe included directly:\n\n```html\n<!-- international support from js-codepage -->\n<script src=\"dist/cpexcel.js\"></script>\n```\n\nAn appropriate version for each dependency is included in the dist/ directory.\n\nThe complete single-file version is generated at `dist/xlsx.full.min.js`\n\nWebpack and browserify builds include optional modules by default.  Webpack can\nbe configured to remove support with `resolve.alias`:\n\n```js\n  /* uncomment the lines below to remove support */\n  resolve: {\n    alias: { \"./dist/cpexcel.js\": \"\" } // <-- omit international support\n  }\n```\n\n\n### ECMAScript 5 Compatibility\n\nSince xlsx.js uses ES5 functions like `Array#forEach`, older browsers require\n[Polyfills](http://git.io/QVh77g).  This repo and the gh-pages branch include\n[a shim](https://github.com/SheetJS/js-xlsx/blob/master/shim.js)\n\nTo use the shim, add the shim before the script tag that loads xlsx.js:\n\n```html\n<script type=\"text/javascript\" src=\"/path/to/shim.js\"></script>\n```\n\n## Parsing Workbooks\n\nFor parsing, the first step is to read the file.  This involves acquiring the\ndata and feeding it into the library.  Here are a few common scenarios:\n\n- node readFile:\n\n```js\nif(typeof require !== 'undefined') XLSX = require('xlsx');\nvar workbook = XLSX.readFile('test.xlsx');\n/* DO SOMETHING WITH workbook HERE */\n```\n\n- Browser DOM Table element:\n\n```js\nvar worksheet = XLSX.utils.table_to_book(document.getElementById('tableau'));\n/* DO SOMETHING WITH workbook HERE */\n```\n\n- ajax (for a more complete example that works in older browsers, check the demo\n  at <http://oss.sheetjs.com/js-xlsx/ajax.html>):\n\n```js\n/* set up XMLHttpRequest */\nvar url = \"test_files/formula_stress_test_ajax.xlsx\";\nvar oReq = new XMLHttpRequest();\noReq.open(\"GET\", url, true);\noReq.responseType = \"arraybuffer\";\n\noReq.onload = function(e) {\n  var arraybuffer = oReq.response;\n\n  /* convert data to binary string */\n  var data = new Uint8Array(arraybuffer);\n  var arr = new Array();\n  for(var i = 0; i != data.length; ++i) arr[i] = String.fromCharCode(data[i]);\n  var bstr = arr.join(\"\");\n\n  /* Call XLSX */\n  var workbook = XLSX.read(bstr, {type:\"binary\"});\n\n  /* DO SOMETHING WITH workbook HERE */\n}\n\noReq.send();\n```\n\n- HTML5 drag-and-drop using readAsBinaryString or readAsArrayBuffer:\n  note: readAsBinaryString and readAsArrayBuffer may not be available in every\n  browser.  Use dynamic feature tests to determine which method to use.\n\n```js\n/* processing array buffers, only required for readAsArrayBuffer */\nfunction fixdata(data) {\n  var o = \"\", l = 0, w = 10240;\n  for(; l<data.byteLength/w; ++l) o+=String.fromCharCode.apply(null,new Uint8Array(data.slice(l*w,l*w+w)));\n  o+=String.fromCharCode.apply(null, new Uint8Array(data.slice(l*w)));\n  return o;\n}\n\nvar rABS = true; // true: readAsBinaryString ; false: readAsArrayBuffer\n/* set up drag-and-drop event */\nfunction handleDrop(e) {\n  e.stopPropagation();\n  e.preventDefault();\n  var files = e.dataTransfer.files;\n  var i,f;\n  for (i = 0; i != files.length; ++i) {\n    f = files[i];\n    var reader = new FileReader();\n    var name = f.name;\n    reader.onload = function(e) {\n      var data = e.target.result;\n\n      var workbook;\n      if(rABS) {\n        /* if binary string, read with type 'binary' */\n        workbook = XLSX.read(data, {type: 'binary'});\n      } else {\n        /* if array buffer, convert to base64 */\n        var arr = fixdata(data);\n        workbook = XLSX.read(btoa(arr), {type: 'base64'});\n      }\n\n      /* DO SOMETHING WITH workbook HERE */\n    };\n    if(rABS) reader.readAsBinaryString(f);\n    else reader.readAsArrayBuffer(f);\n  }\n}\ndrop_dom_element.addEventListener('drop', handleDrop, false);\n```\n\n- HTML5 input file element using readAsBinaryString or readAsArrayBuffer:\n\n```js\n/* fixdata and rABS are defined in the drag and drop example */\nfunction handleFile(e) {\n  var files = e.target.files;\n  var i,f;\n  for (i = 0; i != files.length; ++i) {\n    f = files[i];\n    var reader = new FileReader();\n    var name = f.name;\n    reader.onload = function(e) {\n      var data = e.target.result;\n\n      var workbook;\n      if(rABS) {\n        /* if binary string, read with type 'binary' */\n        workbook = XLSX.read(data, {type: 'binary'});\n      } else {\n        /* if array buffer, convert to base64 */\n        var arr = fixdata(data);\n        workbook = XLSX.read(btoa(arr), {type: 'base64'});\n      }\n\n      /* DO SOMETHING WITH workbook HERE */\n    };\n    reader.readAsBinaryString(f);\n  }\n}\ninput_dom_element.addEventListener('change', handleFile, false);\n```\n\n**Complete examples:**\n\n- <http://oss.sheetjs.com/js-xlsx/> HTML5 File API / Base64 Text / Web Workers\n\nNote that older versions of IE do not support HTML5 File API, so the base64 mode\nis used for testing.  On OSX you can get the base64 encoding with:\n\n```bash\n$ <target_file base64 | pbcopy\n```\n\nOn Windows XP and up you can get the base64 encoding using `certutil`:\n\n```cmd\n> certutil -encode target_file target_file.b64\n```\n\n(note: You have to open the file and remove the header and footer lines)\n\n- <http://oss.sheetjs.com/js-xlsx/ajax.html> XMLHttpRequest\n\n### Note on Streaming Read\n\nThe most common and interesting formats (XLS, XLSX/M, XLSB, ODS) are ultimately\nZIP or CFB containers of files.  Neither format puts the directory structure at\nthe beginning of the file: ZIP files place the Central Directory records at the\nend of the logical file, while CFB files can place the FAT structure anywhere in\nthe file! As a result, to properly handle these formats, a streaming function\nwould have to buffer the entire file before commencing.  That belies the\nexpectations of streaming, so we do not provide any streaming read API.  If you\nreally want to stream, there are node modules like `concat-stream` that will do\nthe buffering for you.\n\n## Working with the Workbook\n\nThe full object format is described later in this README.\n\nThis example extracts the value stored in cell A1 from the first worksheet:\n\n```js\nvar first_sheet_name = workbook.SheetNames[0];\nvar address_of_cell = 'A1';\n\n/* Get worksheet */\nvar worksheet = workbook.Sheets[first_sheet_name];\n\n/* Find desired cell */\nvar desired_cell = worksheet[address_of_cell];\n\n/* Get the value */\nvar desired_value = (desired_cell ? desired_cell.v : undefined);\n```\n\n**Complete examples:**\n\n- <https://github.com/SheetJS/js-xlsx/blob/master/bin/xlsx.njs> node\n\nThe node version installs a command line tool `xlsx` which can read spreadsheet\nfiles and output the contents in various formats.  The source is available at\n`xlsx.njs` in the bin directory.\n\nSome helper functions in `XLSX.utils` generate different views of the sheets:\n\n- `XLSX.utils.sheet_to_csv` generates CSV\n- `XLSX.utils.sheet_to_json` generates an array of objects\n- `XLSX.utils.sheet_to_formulae` generates a list of formulae\n\n## Writing Workbooks\n\nFor writing, the first step is to generate output data.  The helper functions\n`write` and `writeFile` will produce the data in various formats suitable for\ndissemination.  The second step is to actual share the data with the end point.\nAssuming `workbook` is a workbook object:\n\n- nodejs write to file:\n\n```js\n/* output format determined by filename */\nXLSX.writeFile(workbook, 'out.xlsx');\n/* at this point, out.xlsx is a file that you can distribute */\n```\n\n- browser generate binary blob and \"download\" to client\n  (using [FileSaver.js](https://github.com/eligrey/FileSaver.js/) for download):\n\n```js\n/* bookType can be 'xlsx' or 'xlsm' or 'xlsb' or 'ods' */\nvar wopts = { bookType:'xlsx', bookSST:false, type:'binary' };\n\nvar wbout = XLSX.write(workbook,wopts);\n\nfunction s2ab(s) {\n  var buf = new ArrayBuffer(s.length);\n  var view = new Uint8Array(buf);\n  for (var i=0; i!=s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\n  return buf;\n}\n\n/* the saveAs call downloads a file on the local machine */\nsaveAs(new Blob([s2ab(wbout)],{type:\"application/octet-stream\"}), \"test.xlsx\");\n```\n\n**Complete examples:**\n\n- <http://sheetjs.com/demos/writexlsx.html> generates a simple file\n- <http://git.io/WEK88Q> writing an array of arrays in nodejs\n- <http://sheetjs.com/demos/table.html> exporting an HTML table\n\n### Streaming Write\n\nThe streaming write functions are available in the `XLSX.stream` object.  They\ntake the same arguments as the normal write functions but return a readable\nstream.  They are only exposed in node.\n\n- `XLSX.stream.to_csv` is the streaming version of `XLSX.utils.sheet_to_csv`.\n- `XLSX.stream.to_html` is the streaming version of the HTML output type.\n\n<https://github.com/sheetjs/sheetaki> pipes write streams to nodejs response.\n## Interface\n\n`XLSX` is the exposed variable in the browser and the exported node variable\n\n`XLSX.version` is the version of the library (added by the build script).\n\n`XLSX.SSF` is an embedded version of the [format library](http://git.io/ssf).\n\n### Parsing functions\n\n`XLSX.read(data, read_opts)` attempts to parse `data`.\n\n`XLSX.readFile(filename, read_opts)` attempts to read `filename` and parse.\n\nParse options are described in the [Parsing Options](#parsing-options) section.\n\n### Writing functions\n\n`XLSX.write(wb, write_opts)` attempts to write the workbook `wb`\n\n`XLSX.writeFile(wb, filename, write_opts)` attempts to write `wb` to `filename`\n\n`XLSX.writeFileAsync(filename, wb, o, cb)` attempts to write `wb` to `filename`.\nIf `o` is omitted, the writer will use the third argument as the callback.\n\n`XLSX.stream` contains a set of streaming write functions.\n\nWrite options are described in the [Writing Options](#writing-options) section.\n\n### Utilities\n\nUtilities are available in the `XLSX.utils` object:\n\n**Importing:**\n\n- `aoa_to_sheet` converts an array of arrays of JS data to a worksheet.\n\n**Exporting:**\n\n- `sheet_to_json` converts a worksheet object to an array of JSON objects.\n  `sheet_to_row_object_array` is an alias that will be removed in the future.\n- `sheet_to_csv` generates delimiter-separated-values output.\n- `sheet_to_formulae` generates a list of the formulae (with value fallbacks).\n\nExporters are described in the [Utility Functions](#utility-functions) section.\n\n\n**Cell and cell address manipulation:**\n\n- `format_cell` generates the text value for a cell (using number formats)\n- `{en,de}code_{row,col}` convert between 0-indexed rows/cols and A1 forms.\n- `{en,de}code_cell` converts cell addresses\n- `{en,de}code_range` converts cell ranges\n\n## Common Spreadsheet Format\n\njs-xlsx conforms to the Common Spreadsheet Format (CSF):\n\n### General Structures\n\nCell address objects are stored as `{c:C, r:R}` where `C` and `R` are 0-indexed\ncolumn and row numbers, respectively.  For example, the cell address `B5` is\nrepresented by the object `{c:1, r:4}`.\n\nCell range objects are stored as `{s:S, e:E}` where `S` is the first cell and\n`E` is the last cell in the range.  The ranges are inclusive.  For example, the\nrange `A3:B7` is represented by the object `{s:{c:0, r:2}, e:{c:1, r:6}}`. Utils\nuse the following pattern to walk each of the cells in a range:\n\n```js\nfor(var R = range.s.r; R <= range.e.r; ++R) {\n  for(var C = range.s.c; C <= range.e.c; ++C) {\n    var cell_address = {c:C, r:R};\n  }\n}\n```\n\n### Cell Object\n\n| Key | Description                                                            |\n| --- | ---------------------------------------------------------------------- |\n| `v` | raw value (see Data Types section for more info)                       |\n| `w` | formatted text (if applicable)                                         |\n| `t` | cell type: `b` Boolean, `n` Number, `e` error, `s` String, `d` Date    |\n| `f` | cell formula encoded as an A1-style string (if applicable)             |\n| `F` | range of enclosing array if formula is array formula (if applicable)   |\n| `r` | rich text encoding (if applicable)                                     |\n| `h` | HTML rendering of the rich text (if applicable)                        |\n| `c` | comments associated with the cell                                      |\n| `z` | number format string associated with the cell (if requested)           |\n| `l` | cell hyperlink object (.Target holds link, .Tooltip is tooltip)        |\n| `s` | the style/theme of the cell (if applicable)                            |\n\nBuilt-in export utilities (such as the CSV exporter) will use the `w` text if it\nis available.  To change a value, be sure to delete `cell.w` (or set it to\n`undefined`) before attempting to export.  The utilities will regenerate the `w`\ntext from the number format (`cell.z`) and the raw value if possible.\n\nThe actual array formula is stored in the `f` field of the first cell in the\narray range.  Other cells in the range will omit the `f` field.\n\n#### Data Types\n\nThe raw value is stored in the `v` field, interpreted based on the `t` field.\n\nType `b` is the Boolean type.  `v` is interpreted according to JS truth tables.\n\nType `e` is the Error type. `v` holds the number and `w` holds the common name:\n\n|  Value | Error Meaning   |\n| -----: | :-------------- |\n| `0x00` | `#NULL!`        |\n| `0x07` | `#DIV/0!`       |\n| `0x0F` | `#VALUE!`       |\n| `0x17` | `#REF!`         |\n| `0x1D` | `#NAME?`        |\n| `0x24` | `#NUM!`         |\n| `0x2A` | `#N/A`          |\n| `0x2B` | `#GETTING_DATA` |\n\nType `n` is the Number type. This includes all forms of data that Excel stores\nas numbers, such as dates/times and Boolean fields.  Excel exclusively uses data\nthat can be fit in an IEEE754 floating point number, just like JS Number, so the\n`v` field holds the raw number.  The `w` field holds formatted text.  Dates are\nstored as numbers by default and converted with `XLSX.SSF.parse_date_code`.\n\nType `d` is the Date type, generated only when the option `cellDates` is passed.\nSince JSON does not have a natural Date type, parsers are generally expected to\nstore ISO 8601 Date strings like you would get from `date.toISOString()`.  On\nthe other hand, writers and exporters should be able to handle date strings and\nJS Date objects.  Note that Excel disregards timezone modifiers and treats all\ndates in the local timezone.  js-xlsx does not correct for this error.\n\nType `s` is the String type.  `v` should be explicitly stored as a string to\navoid possible confusion.\n\nType `z` represents blank stub cells.  These do not have any data or type, and\nare not processed by any of the core library functions.  By default these cells\nwill not be generated; the parser `sheetStubs` option must be set to `true`.\n\n#### Dates\n\nBy default, Excel stores dates as numbers with a format code that specifies date\nprocessing.  For example, the date `19-Feb-17` is stored as the number `42785`\nwith a number format of `d-mmm-yy`.  The `SSF` module understands number formats\nand performs the appropriate conversion.\n\nXLSX also supports a special date type `d` where the data is an ISO 8601 date\nstring.  The formatter converts the date back to a number.\n\nThe default behavior for all parsers is to generate number cells.  Setting\n`cellDates` to true will force the generators to store dates.\n\n### Sheet Objects\n\nEach key that does not start with `!` maps to a cell (using `A-1` notation)\n\n`sheet[address]` returns the cell object for the specified address.\n\nSpecial sheet keys (accessible as `sheet[key]`, each starting with `!`):\n\n- `sheet['!ref']`: A-1 based range representing the sheet range. Functions that\n  work with sheets should use this parameter to determine the range.  Cells that\n  are assigned outside of the range are not processed.  In particular, when\n  writing a sheet by hand, cells outside of the range are not included\n\n  Functions that handle sheets should test for the presence of `!ref` field.\n  If the `!ref` is omitted or is not a valid range, functions are free to treat\n  the sheet as empty or attempt to guess the range.  The standard utilities that\n  ship with this library treat sheets as empty (for example, the CSV output is\n  empty string).\n\n  When reading a worksheet with the `sheetRows` property set, the ref parameter\n  will use the restricted range.  The original range is set at `ws['!fullref']`\n\n- `sheet['!margins']`: Object representing the page margins.  The default values\n  follow Excel's \"normal\" preset.  Excel also has a \"wide\" and a \"narrow\" preset\n  but they are stored as raw measurements. The main properties are listed below:\n\n| key      | description            | \"normal\" | \"wide\" | \"narrow\" |\n|----------|------------------------|:---------|:-------|:-------- |\n| `left`   | left margin (inches)   | `0.7`    | `1.0`  | `0.25`   |\n| `right`  | right margin (inches)  | `0.7`    | `1.0`  | `0.25`   |\n| `top`    | top margin (inches)    | `0.75`   | `1.0`  | `0.75`   |\n| `bottom` | bottom margin (inches) | `0.75`   | `1.0`  | `0.75`   |\n| `header` | header margin (inches) | `0.3`    | `0.5`  | `0.3`    |\n| `footer` | footer margin (inches) | `0.3`    | `0.5`  | `0.3`    |\n\n```js\n/* Set worksheet sheet to \"normal\" */\nsheet[\"!margins\"] = { left:0.7, right:0.7, top:0.75, bottom:0.75, header:0.3, footer:0.3 }\n/* Set worksheet sheet to \"wide\" */\nsheet[\"!margins\"] = { left:1.0, right:1.0, top:1.0, bottom:1.0, header:0.5, footer:0.5 }\n/* Set worksheet sheet to \"narrow\" */\nsheet[\"!margins\"] = { left:0.25, right:0.25, top:0.75, bottom:0.75, header:0.3, footer:0.3 }\n```\n\n#### Worksheet Object\n\nIn addition to the base sheet keys, worksheets also add:\n\n- `ws['!cols']`: array of column properties objects.  Column widths are actually\n  stored in files in a normalized manner, measured in terms of the \"Maximum\n  Digit Width\" (the largest width of the rendered digits 0-9, in pixels).  When\n  parsed, the column objects store the pixel width in the `wpx` field, character\n  width in the `wch` field, and the maximum digit width in the `MDW` field.\n\n- `ws['!rows']`: array of row properties objects as explained later in the docs.\n  Each row object encodes properties including row height and visibility.\n\n- `ws['!merges']`: array of range objects corresponding to the merged cells in\n  the worksheet.  Plaintext utilities are unaware of merge cells.  CSV export\n  will write all cells in the merge range if they exist, so be sure that only\n  the first cell (upper-left) in the range is set.\n\n- `ws['!protect']`: object of write sheet protection properties.  The `password`\n  key specifies the password for formats that support password-protected sheets\n  (XLSX/XLSB/XLS).  The writer uses the XOR obfuscation method.  The following\n  keys control the sheet protection -- set to `false` to enable a feature when\n  sheet is locked or set to `true` to disable a feature:\n\n| key                   | feature (true=disabled / false=enabled) | default    |\n|:----------------------|:----------------------------------------|:-----------|\n| `selectLockedCells`   | Select locked cells                     | enabled    |\n| `selectUnlockedCells` | Select unlocked cells                   | enabled    |\n| `formatCells`         | Format cells                            | disabled   |\n| `formatColumns`       | Format columns                          | disabled   |\n| `formatRows`          | Format rows                             | disabled   |\n| `insertColumns`       | Insert columns                          | disabled   |\n| `insertRows`          | Insert rows                             | disabled   |\n| `insertHyperlinks`    | Insert hyperlinks                       | disabled   |\n| `deleteColumns`       | Delete columns                          | disabled   |\n| `deleteRows`          | Delete rows                             | disabled   |\n| `sort`                | Sort                                    | disabled   |\n| `autoFilter`          | Filter                                  | disabled   |\n| `pivotTables`         | Use PivotTable reports                  | disabled   |\n| `objects`             | Edit objects                            | enabled    |\n| `scenarios`           | Edit scenarios                          | enabled    |\n\n- `ws['!autofilter']`: AutoFilter object following the schema:\n\n```typescript\ntype AutoFilter = {\n  ref:string; // A-1 based range representing the AutoFilter table range\n}\n```\n\n#### Chartsheet Object\n\nChartsheets are represented as standard sheets.  They are distinguished with the\n`!type` property set to `\"chart\"`.\n\nThe underlying data and `!ref` refer to the cached data in the chartsheet.  The\nfirst row of the chartsheet is the underlying header.\n\n### Workbook Object\n\n`workbook.SheetNames` is an ordered list of the sheets in the workbook\n\n`wb.Sheets[sheetname]` returns an object representing the worksheet.\n\n`wb.Props` is an object storing the standard properties.  `wb.Custprops` stores\ncustom properties.  Since the XLS standard properties deviate from the XLSX\nstandard, XLS parsing stores core properties in both places.\n\n`wb.WBProps` includes more workbook-level properties:\n\n- Excel supports two epochs (January 1 1900 and January 1 1904), see\n  [1900 vs. 1904 Date System](http://support2.microsoft.com/kb/180162).\n  The workbook's epoch can be determined by examining the workbook's\n  `wb.WBProps.date1904` property.\n\n#### Workbook File Properties\n\nThe various file formats use different internal names for file properties.  The\nworkbook `Props` object normalizes the names:\n\n| JS Name     | Excel Description              |\n|:------------|:-------------------------------|\n| Title       | Summary tab \"Title\"            |\n| Subject     | Summary tab \"Subject\"          |\n| Author      | Summary tab \"Author\"           |\n| Manager     | Summary tab \"Manager\"          |\n| Company     | Summary tab \"Company\"          |\n| Category    | Summary tab \"Category\"         |\n| Keywords    | Summary tab \"Keywords\"         |\n| Comments    | Summary tab \"Comments\"         |\n| LastAuthor  | Statistics tab \"Last saved by\" |\n| CreatedDate | Statistics tab \"Created\"       |\n\nFor example, to set the workbook title property:\n\n```js\nif(!wb.Props) wb.Props = {};\nwb.Props.Title = \"Insert Title Here\";\n```\n\nCustom properties are added in the workbook `Custprops` object:\n\n```js\nif(!wb.Custprops) wb.Custprops = {};\nwb.Custprops[\"Custom Property\"] = \"Custom Value\";\n```\n\nWriters will process the `Props` key of the options object:\n\n```js\n/* force the Author to be \"SheetJS\" */\nXLSX.write(wb, {Props:{Author:\"SheetJS\"}});\n```\n\n### Workbook-Level Attributes\n\n`wb.Workbook` stores workbook level attributes.\n\n#### Defined Names\n\n`wb.Workbook.Names` is an array of defined name objects which have the keys:\n\n| Key       | Description                                                      |\n|:----------|:-----------------------------------------------------------------|\n| `Sheet`   | Name scope.  Sheet Index (0 = first sheet) or `null` (Workbook)  |\n| `Name`    | Case-sensitive name.  Standard rules apply **                    |\n| `Ref`     | A1-style Reference (e.g. `\"Sheet1!$A$1:$D$20\"`)                  |\n| `Comment` | Comment (only applicable for XLS/XLSX/XLSB)                      |\n\nExcel allows two sheet-scoped defined names to share the same name.  However, a\nsheet-scoped name cannot collide with a workbook-scope name.  Workbook writers\nmay not enforce this constraint.\n\n### Document Features\n\nEven for basic features like date storage, the official Excel formats store the\nsame content in different ways.  The parsers are expected to convert from the\nunderlying file format representation to the Common Spreadsheet Format.  Writers\nare expected to convert from CSF back to the underlying file format.\n\n#### Formulae\n\nThe A1-style formula string is stored in the `f` field.  Even though different\nfile formats store the formulae in different ways, the formats are translated.\nEven though some formats store formulae with a leading equal sign, CSF formulae\ndo not start with `=`.\n\nThe worksheet representation of A1=1, A2=2, A3=A1+A2:\n\n```js\n{\n\t\"!ref\": \"A1:A3\",\n\tA1: { t:'n', v:1 },\n\tA2: { t:'n', v:2 },\n\tA3: { t:'n', v:3, f:'A1+A2' }\n}\n```\n\nShared formulae are decompressed and each cell has the formula corresponding to\nits cell.  Writers generally do not attempt to generate shared formulae.\n\nCells with formula entries but no value will be serialized in a way that Excel\nand other spreadsheet tools will recognize.  This library will not automatically\ncompute formula results!  For example, to compute `BESSELJ` in a worksheet:\n\n```js\n{\n\t\"!ref\": \"A1:A3\",\n\tA1: { t:'n', v:3.14159 },\n\tA2: { t:'n', v:2 },\n\tA3: { t:'n', f:'BESSELJ(A1,A2)' }\n}\n```\n\n**Array Formulae**\n\nArray formulae are stored in the top-left cell of the array block.  All cells\nof an array formula have a `F` field corresponding to the range.  A single-cell\nformula can be distinguished from a plain formula by the presence of `F` field.\n\nFor example, setting the cell `C1` to the array formula `{=SUM(A1:A3*B1:B3)}`:\n\n```js\nworksheet['C1'] = { t:'n', f: \"SUM(A1:A3*B1:B3)\", F:\"C1:C1\" };\n```\n\nFor a multi-cell array formula, every cell has the same array range but only the\nfirst cell specifies the formula.  Consider `D1:D3=A1:A3*B1:B3`:\n\n```js\nworksheet['D1'] = { t:'n', F:\"D1:D3\", f:\"A1:A3*B1:B3\" };\nworksheet['D2'] = { t:'n', F:\"D1:D3\" };\nworksheet['D3'] = { t:'n', F:\"D1:D3\" };\n```\n\nUtilities and writers are expected to check for the presence of a `F` field and\nignore any possible formula element `f` in cells other than the starting cell.\nThey are not expected to perform validation of the formulae!\n\n**Formula Output**\n\nThe `sheet_to_formulae` method generates one line per formula or array formula.\nArray formulae are rendered in the form `range=formula` while plain cells are\nrendered in the form `cell=formula or value`.  Note that string literals are\nprefixed with an apostrophe `'`, consistent with Excel's formula bar display.\n\n**Formulae File Format Details**\n\n| Storage Representation | Formats                  | Read  | Write |\n|:-----------------------|:-------------------------|:-----:|:-----:|\n| A1-style strings       | XLSX                     |  :o:  |  :o:  |\n| RC-style strings       | XLML and plaintext       |  :o:  |  :o:  |\n| BIFF Parsed formulae   | XLSB and all XLS formats |  :o:  |       |\n| OpenFormula formulae   | ODS/FODS/UOS             |  :o:  |  :o:  |\n\nSince Excel prohibits named cells from colliding with names of A1 or RC style\ncell references, a (not-so-simple) regex conversion is possible.  BIFF Parsed\nformulae have to be explicitly unwound.  OpenFormula formulae can be converted\nwith regexes for the most part.\n\n#### Column Properties\n\nExcel internally stores column widths in a nebulous \"Max Digit Width\" form.  The\nMax Digit Width is the width of the largest digit when rendered.  The internal\nwidth must be an integer multiple of the the width divided by 256.  ECMA-376\ndescribes a formula for converting between pixels and the internal width.\n\nGiven the constraints, it is possible to determine the MDW without actually\ninspecting the font!  The parsers guess the pixel width by converting from width\nto pixels and back, repeating for all possible MDW and selecting the MDW that\nminimizes the error.  XLML actually stores the pixel width, so the guess works\nin the opposite direction.\n\nThe `!cols` array in each worksheet, if present, is a collection of `ColInfo`\nobjects which have the following properties:\n\n```typescript\ntype ColInfo = {\n\tMDW?:number;     // Excel's \"Max Digit Width\" unit, always integral\n\twidth:number;    // width in Excel's \"Max Digit Width\", width*256 is integral\n\twpx?:number;     // width in screen pixels\n\twch?:number;     // intermediate character calculation\n\thidden:?boolean; // if true, the column is hidden\n};\n```\n\nEven though all of the information is made available, writers are expected to\nfollow the priority order:\n\n1) use `width` field if available\n2) use `wpx` pixel width if available\n3) use `wch` character count if available\n\n#### Row Properties\n\nExcel internally stores row heights in points.  The default resolution is 72 DPI\nor 96 PPI, so the pixel and point size should agree.  For different resolutions\nthey may not agree, so the library separates the concepts.\n\nThe `!rows` array in each worksheet, if present, is a collection of `RowInfo`\nobjects which have the following properties:\n\n```typescript\ntype RowInfo = {\n\thpx?:number;     // height in screen pixels\n\thpt?:number;     // height in points\n\thidden:?boolean; // if true, the row is hidden\n};\n```\n\nEven though all of the information is made available, writers are expected to\nfollow the priority order:\n\n1) use `hpx` pixel height if available\n2) use `hpt` point height if available\n\n#### Number Formats\n\nThe `cell.w` formatted text for each cell is produced from `cell.v` and `cell.z`\nformat.  If the format is not specified, the Excel `General` format is used.\nThe format can either be specified as a string or as an index into the format\ntable.  Parsers are expected to populate `workbook.SSF` with the number format\ntable.  Writers are expected to serialize the table.\n\nCustom tools should ensure that the local table has each used format string\nsomewhere in the table.  Excel convention mandates that the custom formats start\nat index 164.  The following example creates a custom format from scratch:\n\n```js\nvar tbl = {};\nXLSX.SSF.init_table(tbl); // <-- load builtin formats\ntbl[164] = \"\\\"T\\\"\\ #0.00\";\nvar wb = {\n\tSSF: tbl,\n\tSheetNames: [\"Sheet1\"],\n\tSheets: {\n\t\tSheet1: {\n\t\t\t\"!ref\":\"A1:C1\",\n\t\t\tA1: { t:\"n\", v:10000 },             // <-- General format\n\t\t\tB1: { t:\"n\", v:10000, z: tbl[4] },  // <-- Builtin format\n\t\t\tC1: { t:\"n\", v:10000, z: tbl[164] } // <-- Custom format\n\t\t}\n\t}\n}\n```\n\nThe rules are slightly different from how Excel displays custom number formats.\nIn particular, literal characters must be wrapped in double quotes or preceded\nby a backslash. For more info, see the Excel documentation article\n[`Create or delete a custom number format`](https://support.office.com/en-us/article/78f2a361-936b-4c03-8772-09fab54be7f4)\nor ECMA-376 18.8.31 (Number Formats)\n\nThe default formats are listed in ECMA-376 18.8.30:\n\n| ID | Format                     |\n|---:|:---------------------------|\n|  0 | `General`                  |\n|  1 | `0`                        |\n|  2 | `0.00`                     |\n|  3 | `#,##0`                    |\n|  4 | `#,##0.00`                 |\n|  9 | `0%`                       |\n| 10 | `0.00%`                    |\n| 11 | `0.00E+00`                 |\n| 12 | `# ?/?`                    |\n| 13 | `# ??/??`                  |\n| 14 | `m/d/yy` (see below)       |\n| 15 | `d-mmm-yy`                 |\n| 16 | `d-mmm`                    |\n| 17 | `mmm-yy`                   |\n| 18 | `h:mm AM/PM`               |\n| 19 | `h:mm:ss AM/PM`            |\n| 20 | `h:mm`                     |\n| 21 | `h:mm:ss`                  |\n| 22 | `m/d/yy h:mm`              |\n| 37 | `#,##0 ;(#,##0)`           |\n| 38 | `#,##0 ;[Red](#,##0)`      |\n| 39 | `#,##0.00;(#,##0.00)`      |\n| 40 | `#,##0.00;[Red](#,##0.00)` |\n| 45 | `mm:ss`                    |\n| 46 | `[h]:mm:ss`                |\n| 47 | `mmss.0`                   |\n| 48 | `##0.0E+0`                 |\n| 49 | `@`                        |\n\nFormat 14 (`m/d/yy`) is localized by Excel: even though the file specifies that\nnumber format, it will be drawn differently based on system settings.  It makes\nsense when the producer and consumer of files are in the same locale, but that\nis not always the case over the Internet.  To get around this ambiguity, parse\nfunctions accept the `dateNF` option to override the interpretation of that\nspecific format string.\n#### Hyperlinks\n\nHyperlinks are stored in the `l` key of cell objects.  The `Target` field of the\nhyperlink object is the target of the link, including the URI fragment. Tooltips\nare stored in the `Tooltip` field and are displayed when you move your mouse\nover the text.\n\nFor example, the following snippet creates a link from cell `A3` to\n<http://sheetjs.com> with the tip `\"Find us @ SheetJS.com!\"`:\n\n```js\nws['A3'].l = { Target:\"http://sheetjs.com\", Tooltip:\"Find us @ SheetJS.com!\" };\n```\n\nNote that Excel does not automatically style hyperlinks -- they will generally\nbe displayed as normal text.\n\n#### Cell Comments\n\nCell comments are objects stored in the `c` array of cell objects.  The actual\ncontents of the comment are split into blocks based on the comment author.  The\n`a` field of each comment object is the author of the comment and the `t` field\nis the plaintext representation.\n\nFor example, the following snippet appends a cell comment into cell `A1`:\n\n```js\nif(!ws.A1.c) ws.A1.c = [];\nws.A1.c.push({a:\"SheetJS\", t:\"I'm a little comment, short and stout!\"});\n```\n\nNote: XLSB enforces a 54 character limit on the Author name.  Names longer than\n54 characters may cause issues with other formats.\n\n#### Sheet Visibility\n\nExcel enables hiding sheets in the lower tab bar.  The sheet data is stored in\nthe file but the UI does not readily make it available.  Standard hidden sheets\nare revealed in the unhide menu.  Excel also has \"very hidden\" sheets which\ncannot be revealed in the menu.  It is only accessible in the VB Editor!\n\nThe visibility setting is stored in the `Hidden` property of the sheet props\narray.  The values are:\n\n| Value | Definition  |\n|:-----:|:------------|\n|   0   | Visible     |\n|   1   | Hidden      |\n|   2   | Very Hidden |\n\nWith <https://rawgit.com/SheetJS/test_files/master/sheet_visibility.xlsx>:\n\n```js\n> wb.Workbook.Sheets.map(function(x) { return [x.name, x.Hidden] })\n[ [ 'Visible', 0 ], [ 'Hidden', 1 ], [ 'VeryHidden', 2 ] ]\n```\n\nNon-Excel formats do not support the Very Hidden state.  The best way to test\nif a sheet is visible is to check if the `Hidden` property is logical truth:\n\n```js\n> wb.Workbook.Sheets.map(function(x) { return [x.name, !x.Hidden] })\n[ [ 'Visible', true ], [ 'Hidden', false ], [ 'VeryHidden', false ] ]\n```\n\n## Parsing Options\n\nThe exported `read` and `readFile` functions accept an options argument:\n\n| Option Name | Default | Description                                          |\n| :---------- | ------: | :--------------------------------------------------- |\n| type        |         | Input data encoding (see Input Type below)           |\n| cellFormula | true    | Save formulae to the .f field                        |\n| cellHTML    | true    | Parse rich text and save HTML to the `.h` field      |\n| cellNF      | false   | Save number format string to the `.z` field          |\n| cellStyles  | false   | Save style/theme info to the `.s` field              |\n| cellText    | true    | Generated formatted text to the `.w` field           |\n| cellDates   | false   | Store dates as type `d` (default is `n`)             |\n| dateNF      |         | If specified, use the string for date code 14 **     |\n| sheetStubs  | false   | Create cell objects of type `z` for stub cells       |\n| sheetRows   | 0       | If >0, read the first `sheetRows` rows **            |\n| bookDeps    | false   | If true, parse calculation chains                    |\n| bookFiles   | false   | If true, add raw files to book object **             |\n| bookProps   | false   | If true, only parse enough to get book metadata **   |\n| bookSheets  | false   | If true, only parse enough to get the sheet names    |\n| bookVBA     | false   | If true, expose vbaProject.bin to `vbaraw` field **  |\n| password    | \"\"      | If defined and file is encrypted, use password **    |\n| WTF         | false   | If true, throw errors on unexpected file features ** |\n\n- Even if `cellNF` is false, formatted text will be generated and saved to `.w`\n- In some cases, sheets may be parsed even if `bookSheets` is false.\n- `bookSheets` and `bookProps` combine to give both sets of information\n- `Deps` will be an empty object if `bookDeps` is falsy\n- `bookFiles` behavior depends on file type:\n    * `keys` array (paths in the ZIP) for ZIP-based formats\n    * `files` hash (mapping paths to objects representing the files) for ZIP\n    * `cfb` object for formats using CFB containers\n- `sheetRows-1` rows will be generated when looking at the JSON object output\n  (since the header row is counted as a row when parsing the data)\n- `bookVBA` merely exposes the raw vba object.  It does not parse the data.\n- Currently only XOR encryption is supported.  Unsupported error will be thrown\n  for files employing other encryption methods.\n- WTF is mainly for development.  By default, the parser will suppress read\n  errors on single worksheets, allowing you to read from the worksheets that do\n  parse properly. Setting `WTF:1` forces those errors to be thrown.\n\nThe defaults are enumerated in bits/84\\_defaults.js\n\n### Input Type\n\nStrings can be interpreted in multiple ways.  The `type` parameter for `read`\ntells the library how to parse the data argument:\n\n| `type`     | expected input                                                  |\n|------------|-----------------------------------------------------------------|\n| `\"base64\"` | string: base64 encoding of the file                             |\n| `\"binary\"` | string:  binary string (`n`-th byte is `data.charCodeAt(n)`)    |\n| `\"buffer\"` | nodejs Buffer                                                   |\n| `\"array\"`  | array: array of 8-bit unsigned int (`n`-th byte is `data[n]`)   |\n| `\"file\"`   | string: filename that will be read and processed (nodejs only)  |\n\n### Guessing File Type\n\nExcel and other spreadsheet tools read the first few bytes and apply other\nheuristics to determine a file type.  This enables file type punning: renaming\nfiles with the `.xls` extension will tell your computer to use Excel to open the\nfile but Excel will know how to handle it.  This library applies similar logic:\n\n| Byte 0 | Raw File Type | Spreadsheet Types                                   |\n|:-------|:--------------|:----------------------------------------------------|\n| `0xD0` | CFB Container | BIFF 5/8 or password-protected XLSX/XLSB or WQ3/QPW |\n| `0x09` | BIFF Stream   | BIFF 2/3/4/5                                        |\n| `0x3C` | XML/HTML      | SpreadsheetML / Flat ODS / UOS1 / HTML / plaintext  |\n| `0x50` | ZIP Archive   | XLSB or XLSX/M or ODS or UOS2 or plaintext          |\n| `0x49` | Plain Text    | SYLK or plaintext                                   |\n| `0x54` | Plain Text    | DIF or plaintext                                    |\n| `0xFE` | UTF16 Encoded | SpreadsheetML or Flat ODS or UOS1 or plaintext      |\n| `0x00` | Record Stream | Lotus WK\\* or Quattro Pro or plaintext              |\n\nDBF files are detected based on the first byte as well as the third and fourth\nbytes (corresponding to month and day of the file date)\n\nPlaintext format guessing follows the priority order:\n\n| Format | Test                                                                |\n|:-------|:--------------------------------------------------------------------|\n| HTML   | starts with \\<html                                                  |\n| XML    | starts with \\<                                                      |\n| DSV    | starts with `/sep=.$/`, separator is the specified character        |\n| TSV    | one of the first 1024 characters is a tab char `\"\\t\"`               |\n| CSV    | one of the first 1024 characters is a comma char `\",\"`              |\n| PRN    | (default)                                                           |\n\n## Writing Options\n\nThe exported `write` and `writeFile` functions accept an options argument:\n\n| Option Name |  Default | Description                                         |\n| :---------- | -------: | :-------------------------------------------------- |\n| type        |          | Output data encoding (see Output Type below)        |\n| cellDates   |  `false` | Store dates as type `d` (default is `n`)            |\n| bookSST     |  `false` | Generate Shared String Table **                     |\n| bookType    | `\"xlsx\"` | Type of Workbook (see below for supported formats)  |\n| sheet       |     `\"\"` | Name of Worksheet for single-sheet formats **       |\n| compression |  `false` | Use ZIP compression for ZIP-based formats **        |\n| Props       |          | Override workbook properties when writing **        |\n| themeXLSX   |          | Override theme XML when writing XLSX/XLSB/XLSM **   |\n\n- `bookSST` is slower and more memory intensive, but has better compatibility\n  with older versions of iOS Numbers\n- The raw data is the only thing guaranteed to be saved.  Features not described\n  in this README may not be serialized.\n- `cellDates` only applies to XLSX output and is not guaranteed to work with\n  third-party readers.  Excel itself does not usually write cells with type `d`\n  so non-Excel tools may ignore the data or blow up in the presence of dates.\n- `Props` is an object mirroring the workbook `Props` field.  See the table from\n  the [Workbook File Properties](#workbook-file-properties) section.\n- if specified, the string from `themeXLSX` will be saved as the primary theme\n  for XLSX/XLSB/XLSM files (to `xl/theme/theme1.xml` in the ZIP)\n\n### Supported Output Formats\n\nFor broad compatibility with third-party tools, this library supports many\noutput formats.  The specific file type is controlled with `bookType` option:\n\n| bookType | file ext | container | sheets | Description                       |\n| :------- | -------: | :-------: | :----- |:--------------------------------- |\n| `xlsx`   | `.xlsx`  |    ZIP    | multi  | Excel 2007+ XML Format            |\n| `xlsm`   | `.xlsm`  |    ZIP    | multi  | Excel 2007+ Macro XML Format      |\n| `xlsb`   | `.xlsb`  |    ZIP    | multi  | Excel 2007+ Binary Format         |\n| `biff2`  | `.xls`   |   none    | single | Excel 2.0 Worksheet format        |\n| `xlml`   | `.xls`   |   none    | multi  | Excel 2003-2004 (SpreadsheetML)   |\n| `ods`    | `.ods`   |    ZIP    | multi  | OpenDocument Spreadsheet          |\n| `fods`   | `.fods`  |   none    | multi  | Flat OpenDocument Spreadsheet     |\n| `csv`    | `.csv`   |   none    | single | Comma Separated Values            |\n| `txt`    | `.txt`   |   none    | single | UTF-16 Unicode Text (TXT)         |\n| `sylk`   | `.sylk`  |   none    | single | Symbolic Link (SYLK)              |\n| `html`   | `.html`  |   none    | single | HTML Document                     |\n| `dif`    | `.dif`   |   none    | single | Data Interchange Format (DIF)     |\n| `prn`    | `.prn`   |   none    | single | Lotus Formatted Text              |\n\n- `compression` only applies to formats with ZIP containers.\n- Formats that only support a single sheet require a `sheet` option specifying\n  the worksheet.  If the string is empty, the first worksheet is used.\n- `writeFile` will automatically guess the output file format based on the file\n  extension if `bookType` is not specified.  It will choose the first format in\n  the aforementioned table that matches the extension.\n\n### Output Type\n\nThe `type` argument for `write` mirrors the `type` argument for `read`:\n\n| `type`     | output                                                          |\n|------------|-----------------------------------------------------------------|\n| `\"base64\"` | string: base64 encoding of the file                             |\n| `\"binary\"` | string:  binary string (`n`-th byte is `data.charCodeAt(n)`)    |\n| `\"buffer\"` | nodejs Buffer                                                   |\n| `\"file\"`   | string: name of file to be written (nodejs only)                |\n\n\n## Utility Functions\n\nThe `sheet_to_*` functions accept a worksheet and an optional options object.\n\nThe `*_to_sheet` functions accept a data object and an optional options object.\n\nThe examples are based on the following worksheet:\n\n```\nXXX| A | B | C | D | E | F | G |\n---+---+---+---+---+---+---+---+\n 1 | S | h | e | e | t | J | S |\n 2 | 1 | 2 | 3 | 4 | 5 | 6 | 7 |\n 3 | 2 | 3 | 4 | 5 | 6 | 7 | 8 |\n```\n\n### Array of Arrays Input\n\n`XLSX.utils.aoa_to_sheet` takes an array of arrays of JS values and returns a\nworksheet resembling the input data.  Numbers, Booleans and Strings are stored\nas the corresponding styles.  Dates are stored as date or numbers.  Array holes\nand explicit `undefined` values are skipped.  `null` values may be stubbed. All\nother values are stored as strings.  The function takes an options argument:\n\n| Option Name |  Default | Description                                         |\n| :---------- | :------: | :-------------------------------------------------- |\n| dateNF      |  fmt 14  | Use specified date format in string output          |\n| cellDates   |  false   | Store dates as type `d` (default is `n`)            |\n| sheetStubs  |  false   | Create cell objects of type `z` for `null` values   |\n\nTo generate the example sheet:\n\n```js\nvar ws = XLSX.utils.aoa_to_sheet([\n\t\"SheetJS\".split(\"\"),\n\t[1,2,3,4,5,6,7],\n\t[2,3,4,5,6,7,8]\n]);\n```\n\n### HTML Table Input\n\n`XLSX.utils.table_to_sheet` takes a table DOM element and returns a worksheet\nresembling the input table.  Numbers are parsed.  All other data will be stored\nas strings.\n\n`XLSX.utils.table_to_book` produces a minimal workbook based on the worksheet.\n\nTo generate the example sheet, start with the HTML table:\n\n```html\n<table id=\"sheetjs\">\n<tr><td>S</td><td>h</td><td>e</td><td>e</td><td>t</td><td>J</td><td>S</td></tr>\n<tr><td>1</td><td>2</td><td>3</td><td>4</td><td>5</td><td>6</td><td>7</td></tr>\n<tr><td>2</td><td>3</td><td>4</td><td>5</td><td>6</td><td>7</td><td>8</td></tr>\n</table>\n```\n\nTo process the table:\n\n```js\nvar tbl = document.getElementById('sheetjs');\nvar wb = XLSX.utils.table_to_book(tbl);\n```\n\nNote: `XLSX.read` can handle HTML represented as strings.\n\n### Formulae Output\n\n`XLSX.utils.sheet_to_formulae` generates an array of commands that represent\nhow a person would enter data into an application.  Each entry is of the form\n`A1-cell-address=formula-or-value`.  String literals are prefixed with a `'` in\naccordance with Excel.  For the example sheet:\n\n```js\n> var o = XLSX.utils.sheet_to_formulae(ws);\n> o.filter(function(v, i) { return i % 5 === 0; });\n[ 'A1=\\'S', 'F1=\\'J', 'D2=4', 'B3=3', 'G3=8' ]\n```\n\n### Delimiter-Separated Output\n\nAs an alternative to the `writeFile` CSV type, `XLSX.utils.sheet_to_csv` also\nproduces CSV output.  The function takes an options argument:\n\n| Option Name |  Default | Description                                         |\n| :---------- | :------: | :-------------------------------------------------- |\n| FS          |  `\",\"`   | \"Field Separator\"  delimiter between fields         |\n| RS          |  `\"\\n\"`  | \"Record Separator\" delimiter between rows           |\n| dateNF      |  fmt 14  | Use specified date format in string output          |\n| strip       |  false   | Remove trailing field separators in each record **  |\n| blankrows   |  true    | Include blank lines in the CSV output               |\n\n- `strip` will remove trailing commas from each line under default `FS/RS`\n- blankrows must be set to `false` to skip blank lines.\n\nFor the example sheet:\n\n```js\n> console.log(XLSX.utils.sheet_to_csv(ws));\nS,h,e,e,t,J,S\n1,2,3,4,5,6,7\n2,3,4,5,6,7,8\n> console.log(XLSX.utils.sheet_to_csv(ws, {FS:\"\\t\"}));\nS\th\te\te\tt\tJ\tS\n1\t2\t3\t4\t5\t6\t7\n2\t3\t4\t5\t6\t7\t8\n> console.log(XLSX.utils.sheet_to_csv(ws,{FS:\":\",RS:\"|\"}));\nS:h:e:e:t:J:S|1:2:3:4:5:6:7|2:3:4:5:6:7:8|\n```\n\n#### UTF-16 Unicode Text\n\nThe `txt` output type uses the tab character as the field separator.  If the\ncodepage library is available (included in the full distribution but not core),\nthe output will be encoded in codepage `1200` and the BOM will be prepended.\n\n### JSON\n\n`XLSX.utils.sheet_to_json` and the alias `XLSX.utils.sheet_to_row_object_array`\ngenerate different types of JS objects.  The function takes an options argument:\n\n| Option Name |  Default | Description                                         |\n| :---------- | :------: | :-------------------------------------------------- |\n| raw         | `false`  | Use raw values (true) or formatted strings (false)  |\n| range       | from WS  | Override Range (see table below)                    |\n| header      |          | Control output format (see table below)             |\n| dateNF      |  fmt 14  | Use specified date format in string output          |\n| defval      |          | Use specified value in place of null or undefined   |\n| blankrows   |    **    | Include blank lines in the output **                |\n\n- `raw` only affects cells which have a format code (`.z`) field or a formatted\n  text (`.w`) field.\n- If `header` is specified, the first row is considered a data row; if `header`\n  is not specified, the first row is the header row and not considered data.\n- When `header` is not specified, the conversion will automatically disambiguate\n  header entries by affixing `_` and a count starting at `1`.  For example, if\n  three columns have header `foo` the output fields are `foo`, `foo_1`, `foo_2`\n- `null` values are returned when `raw` is true but are skipped when false.\n- If `defval` is not specified, null and undefined values are skipped normally.\n  If specified, all null and undefined points will be filled with `defval`\n- When `header` is `1`, the default is to generate blank rows.  `blankrows` must\n  be set to `false` to skip blank rows.\n- When `header` is not `1`, the default is to skip blank rows.  `blankrows` must\n  be truthy to generate blank rows\n\n`range` is expected to be one of:\n\n| `range`          | Description                                               |\n| :--------------- | :-------------------------------------------------------- |\n| (number)         | Use worksheet range but set starting row to the value     |\n| (string)         | Use specified range (A1-style bounded range string)       |\n| (default)        | Use worksheet range (`ws['!ref']`)                        |\n\n`header` is expected to be one of:\n\n| `header`         | Description                                               |\n| :--------------- | :-------------------------------------------------------- |\n| `1`              | Generate an array of arrays (\"2D Array\")                  |\n| `\"A\"`            | Row object keys are literal column labels                 |\n| array of strings | Use specified strings as keys in row objects              |\n| (default)        | Read and disambiguate first row as keys                   |\n\nIf header is not `1`, the row object will contain the non-enumerable property\n`__rowNum__` that represents the row of the sheet corresponding to the entry.\n\nFor the example sheet:\n\n```js\n> console.log(XLSX.utils.sheet_to_json(ws));\n[ { S: 1, h: 2, e: 3, e_1: 4, t: 5, J: 6, S_1: 7 },\n  { S: 2, h: 3, e: 4, e_1: 5, t: 6, J: 7, S_1: 8 } ]\n\n> console.log(XLSX.utils.sheet_to_json(ws, {header:1}));\n[ [ 'S', 'h', 'e', 'e', 't', 'J', 'S' ],\n  [ '1', '2', '3', '4', '5', '6', '7' ],\n  [ '2', '3', '4', '5', '6', '7', '8' ] ]\n\n> console.log(XLSX.utils.sheet_to_json(ws, {header:\"A\"}));\n[ { A: 'S', B: 'h', C: 'e', D: 'e', E: 't', F: 'J', G: 'S' },\n  { A: '1', B: '2', C: '3', D: '4', E: '5', F: '6', G: '7' },\n  { A: '2', B: '3', C: '4', D: '5', E: '6', F: '7', G: '8' } ]\n> console.log(XLSX.utils.sheet_to_json(ws, {header:[\"A\",\"E\",\"I\",\"O\",\"U\",\"6\",\"9\"]}));\n[ { '6': 'J', '9': 'S', A: 'S', E: 'h', I: 'e', O: 'e', U: 't' },\n  { '6': '6', '9': '7', A: '1', E: '2', I: '3', O: '4', U: '5' },\n  { '6': '7', '9': '8', A: '2', E: '3', I: '4', O: '5', U: '6' } ]\n```\n\nExample showing the effect of `raw`:\n\n```js\n> ws['A2'].w = \"3\";                          // set A2 formatted string value\n> console.log(XLSX.utils.sheet_to_json(ws, {header:1}));\n[ [ 'S', 'h', 'e', 'e', 't', 'J', 'S' ],\n  [ '3', '2', '3', '4', '5', '6', '7' ],     // <-- A2 uses the formatted string\n  [ '2', '3', '4', '5', '6', '7', '8' ] ]\n> console.log(XLSX.utils.sheet_to_json(ws, {header:1, raw:true}));\n[ [ 'S', 'h', 'e', 'e', 't', 'J', 'S' ],\n  [ 1, 2, 3, 4, 5, 6, 7 ],                   // <-- A2 uses the raw value\n  [ 2, 3, 4, 5, 6, 7, 8 ] ]\n```\n\n## File Formats\n\nDespite the library name `xlsx`, it supports numerous spreadsheet file formats:\n\n| Format                                                       | Read  | Write |\n|:-------------------------------------------------------------|:-----:|:-----:|\n| **Excel Worksheet/Workbook Formats**                         |:-----:|:-----:|\n| Excel 2007+ XML Formats (XLSX/XLSM)                          |  :o:  |  :o:  |\n| Excel 2007+ Binary Format (XLSB BIFF12)                      |  :o:  |  :o:  |\n| Excel 2003-2004 XML Format (XML \"SpreadsheetML\")             |  :o:  |  :o:  |\n| Excel 97-2004 (XLS BIFF8)                                    |  :o:  |       |\n| Excel 5.0/95 (XLS BIFF5)                                     |  :o:  |       |\n| Excel 4.0 (XLS/XLW BIFF4)                                    |  :o:  |       |\n| Excel 3.0 (XLS BIFF3)                                        |  :o:  |       |\n| Excel 2.0/2.1 (XLS BIFF2)                                    |  :o:  |  :o:  |\n| **Excel Supported Text Formats**                             |:-----:|:-----:|\n| Delimiter-Separated Values (CSV/TXT)                         |  :o:  |  :o:  |\n| Data Interchange Format (DIF)                                |  :o:  |  :o:  |\n| Symbolic Link (SYLK/SLK)                                     |  :o:  |  :o:  |\n| Lotus Formatted Text (PRN)                                   |  :o:  |  :o:  |\n| UTF-16 Unicode Text (TXT)                                    |  :o:  |  :o:  |\n| **Other Workbook/Worksheet Formats**                         |:-----:|:-----:|\n| OpenDocument Spreadsheet (ODS)                               |  :o:  |  :o:  |\n| Flat XML ODF Spreadsheet (FODS)                              |  :o:  |  :o:  |\n| Uniform Office Format Spreadsheet (标文通 UOS1/UOS2)         |  :o:  |       |\n| dBASE II/III/IV / Visual FoxPro (DBF)                        |  :o:  |       |\n| Lotus 1-2-3 (WKS/WK1/WK2/WK3/WK4/123)                        |  :o:  |       |\n| Quattro Pro Spreadsheet (WQ1/WQ2/WB1/WB2/WB3/QPW)            |  :o:  |       |\n| **Other Common Spreadsheet Output Formats**                  |:-----:|:-----:|\n| HTML Tables                                                  |  :o:  |  :o:  |\n\n### Excel 2007+ XML (XLSX/XLSM)\n\nXLSX and XLSM files are ZIP containers containing a series of XML files in\naccordance with the Open Packaging Conventions (OPC).  The XLSM filetype, almost\nidentical to XLSX, is used for files containing macros.\n\nThe format is standardized in ECMA-376 and later in ISO/IEC 29500.  Excel does\nnot follow the specification, and there are additional documents discussing how\nExcel deviates from the specification.\n\n### Excel 2.0-95 (BIFF2/BIFF3/BIFF4/BIFF5)\n\nBIFF 2/3 XLS are single-sheet streams of binary records.  Excel 4 introduced\nthe concept of a workbook (`XLW` files) but also had single-sheet `XLS` format.\nThe structure is largely similar to the Lotus 1-2-3 file formats.  BIFF5/8/12\nextended the format in various ways but largely stuck to the same record format.\n\nThere is no official specification for any of these formats.  Excel 95 can write\nfiles in these formats, so record lengths and fields were backsolved by writing\nin all of the supported formats and comparing files.  Excel 2016 can generate\nBIFF5 files, enabling a full suite of file tests starting from XLSX or BIFF2.\n\n### Excel 97-2004 Binary (BIFF8)\n\nBIFF8 exclusively uses the Compound File Binary container format, splitting some\ncontent into streams within the file.  At its core, it still uses an extended\nversion of the binary record format from older versions of BIFF.\n\nThe `MS-XLS` specification covers the basics of the file format, and other\nspecifications expand on serialization of features like properties.\n\n### Excel 2003-2004 (SpreadsheetML)\n\nPredating XLSX, SpreadsheetML files are simple XML files.  There is no official\nand comprehensive specification, although MS has released whitepapers on the\nformat.  Since Excel 2016 can generate SpreadsheetML files, backsolving is\npretty straightforward.\n\n### Excel 2007+ Binary (XLSB, BIFF12)\n\nIntroduced in parallel with XLSX, the XLSB filetype combines BIFF architecture\nwith the content separation and ZIP container of XLSX.  For the most part nodes\nin an XLSX sub-file can be mapped to XLSB records in a corresponding sub-file.\n\nThe `MS-XLSB` specification covers the basics of the file format, and other\nspecifications expand on serialization of features like properties.\n\n### Delimiter-Separated Values (CSV/TXT)\n\nExcel CSV deviates from RFC4180 in a number of important ways.  The generated\nCSV files should generally work in Excel although they may not work in RFC4180\ncompatible readers.  The parser should generally understand Excel CSV. The\nwriter proactively generates cells for formulae if values are unavailable.\n\nExcel TXT uses tab as the delimiter and codepage 1200.\n\n### Other Workbook Formats\n\nSupport for other formats is generally far XLS/XLSB/XLSX support, due in large\npart to a lack of publicly available documentation.  Test files were produced in\nthe respective apps and compared to their XLS exports to determine structure.\nThe main focus is data extraction.\n\n#### Lotus 1-2-3 (WKS/WK1/WK2/WK3/WK4/123)\n\nThe Lotus formats consist of binary records similar to the BIFF structure. Lotus\ndid release a whitepaper decades ago covering the original WK1 format.  Other\nfeatures were deduced by producing files and comparing to Excel support.\n\n#### Quattro Pro (WQ1/WQ2/WB1/WB2/WB3/QPW)\n\nThe Quattro Pro formats use binary records in the same way as BIFF and Lotus.\nSome of the newer formats (namely WB3 and QPW) use a CFB enclosure just like\nBIFF8 XLS.\n\n#### OpenDocument Spreadsheet (ODS/FODS)\n\nODS is an XML-in-ZIP format akin to XLSX while FODS is an XML format akin to\nSpreadsheetML.  Both are detailed in the OASIS standard, but tools like LO/OO\nadd undocumented extensions.  The parsers and writers do not implement the full\nstandard, instead focusing on parts necessary to extract and store raw data.\n\n#### Uniform Office Spreadsheet (UOS1/2)\n\nUOS is a very similar format, and it comes in 2 varieties corresponding to ODS\nand FODS respectively.  For the most part, the difference between the formats\nlies in the names of tags and attributes.\n\n### Other Single-Worksheet Formats\n\nMany older formats supported only one worksheet:\n\n#### dBASE and Visual FoxPro (DBF)\n\nDBF is really a typed table format: each column can only hold one data type and\neach record omits type information.  The parser generates a header row and\ninserts records starting at the second row of the worksheet.\n\nMulti-file extensions like external memos and tables are currently unsupported,\nlimited by the general ability to read arbitrary files in the web browser.\n\n#### Symbolic Link (SYLK)\n\nThere is no real documentation.  All knowledge was gathered by saving files in\nvarious versions of Excel to deduce the meaning of fields.  Notes:\n\n- Plain formulae are stored in the RC form.\n- Column widths are rounded to integral characters.\n\n#### Lotus Formatted Text (PRN)\n\nThere is no real documentation, and in fact Excel treats PRN as an output-only\nfile format.  Nevertheless we can guess the column widths and reverse-engineer\nthe original layout.  Excel's 240-character width limitation is not enforced.\n\n#### Data Interchange Format (DIF)\n\nThere is no unified definition.  Visicalc DIF differs from Lotus DIF, and both\ndiffer from Excel DIF.  Where ambiguous, the parser/writer follows the expected\nbehavior from Excel.  In particular, Excel extends DIF in incompatible ways:\n\n- Since Excel automatically converts numbers-as-strings to numbers, numeric\n  string constants are converted to formulae: `\"0.3\" -> \"=\"\"0.3\"\"`\n- DIF technically expects numeric cells to hold the raw numeric data, but Excel\n  permits formatted numbers (including dates)\n- DIF technically has no support for formulae, but Excel will automatically\n  convert plain formulae.  Array formulae are not preserved.\n\n#### HTML\n\nExcel HTML worksheets include special metadata encoded in styles.  For example,\n`mso-number-format` is a localized string containing the number format.  Despite\nthe metadata the output is valid HTML, although it does accept bare `&` symbols.\n\n## Testing\n\n### Node\n\n`make test` will run the node-based tests.  By default it runs tests on files in\nevery supported format.  To test a specific file type, set `FMTS` to the format\nyou want to test.  Feature-specific tests are avaialble with `make test_misc`\n\n```bash\n$ make test_misc   # run core tests\n$ make test        # run full tests\n$ make test_xls    # o","maintainers":[{"name":"sheetjs","email":"dev@sheetjs.com"}],"time":{"modified":"2017-04-30T16:55:11.663Z","created":"2013-12-06T19:57:24.042Z","0.3.3":"2013-12-06T19:57:25.989Z","0.3.5":"2013-12-27T03:31:57.185Z","0.3.6":"2013-12-31T17:24:16.538Z","0.3.7":"2014-01-22T05:03:52.433Z","0.3.8":"2014-01-23T06:20:28.728Z","0.3.9":"2014-01-23T16:17:00.252Z","0.3.10":"2014-01-25T22:29:44.680Z","0.4.0":"2014-01-28T16:38:41.478Z","0.4.1":"2014-01-29T06:00:32.008Z","0.4.2":"2014-01-30T03:06:34.807Z","0.4.3":"2014-01-31T11:56:38.048Z","0.5.0":"2014-02-04T00:08:12.335Z","0.5.1":"2014-02-05T13:47:09.519Z","0.5.2":"2014-02-06T22:53:11.206Z","0.5.3":"2014-02-07T10:56:22.742Z","0.5.4":"2014-02-12T06:55:05.273Z","0.5.5":"2014-02-13T06:34:38.744Z","0.5.6":"2014-02-14T06:28:17.761Z","0.5.7":"2014-02-15T05:14:38.249Z","0.5.8":"2014-02-17T08:53:08.538Z","0.5.9":"2014-02-19T03:10:56.406Z","0.5.9-a":"2014-02-19T15:46:36.808Z","0.5.10":"2014-02-21T16:51:23.143Z","0.5.10-a":"2014-02-22T21:36:41.863Z","0.5.10-b":"2014-02-26T19:31:09.313Z","0.5.10-b.1":"2014-02-26T19:35:15.752Z","0.5.10-b.2":"2014-02-26T19:37:43.440Z","0.5.10-b.3":"2014-02-26T19:38:49.251Z","0.5.11":"2014-03-19T18:00:05.135Z","0.5.12":"2014-03-21T02:51:20.843Z","0.5.13":"2014-03-23T21:47:51.622Z","0.5.13-a":"2014-03-27T18:46:59.492Z","0.5.14":"2014-03-29T02:12:59.859Z","0.5.15":"2014-03-29T23:06:10.018Z","0.5.16":"2014-04-03T23:26:39.581Z","0.5.17":"2014-04-04T23:05:52.937Z","0.6.0":"2014-04-15T09:13:17.745Z","0.6.1":"2014-04-23T01:44:27.364Z","0.6.1-a":"2014-05-01T00:28:34.198Z","0.6.2":"2014-05-03T19:33:49.171Z","0.7.0":"2014-05-16T01:10:05.082Z","0.7.1":"2014-05-16T03:03:50.306Z","0.7.2":"2014-05-22T12:35:10.759Z","0.7.2-a":"2014-05-22T20:14:49.477Z","0.7.3":"2014-05-25T09:31:30.332Z","0.7.4":"2014-05-29T23:25:18.905Z","0.7.5":"2014-06-02T05:26:34.338Z","0.7.6":"2014-06-05T07:19:10.613Z","0.7.6-a":"2014-06-05T07:25:27.820Z","0.7.6-b":"2014-06-05T07:27:21.243Z","0.7.6-c":"2014-06-05T07:39:08.555Z","0.7.6-d":"2014-06-05T07:57:19.161Z","0.7.6-e":"2014-06-05T07:58:37.489Z","0.7.6-f":"2014-06-05T08:01:31.340Z","0.7.6-g":"2014-06-05T08:03:14.089Z","0.7.6-h":"2014-06-27T14:05:15.668Z","0.7.6-i":"2014-06-27T15:11:49.546Z","0.7.7":"2014-06-29T19:11:34.403Z","0.7.8":"2014-07-28T16:51:40.892Z","0.7.9":"2014-08-21T19:10:04.845Z","0.7.10":"2014-08-26T18:00:53.443Z","0.7.11":"2014-10-10T02:47:52.158Z","0.7.12":"2014-10-26T06:02:01.865Z","0.8.0":"2015-04-03T01:28:54.505Z","0.8.1":"2016-12-31T08:50:02.272Z","0.8.2":"2017-02-04T00:10:47.393Z","0.8.3":"2017-02-11T01:51:12.157Z","0.8.4":"2017-02-19T21:08:22.325Z","0.8.5":"2017-02-22T07:55:02.400Z","0.8.6":"2017-02-24T11:12:22.312Z","0.8.7":"2017-03-05T01:20:59.408Z","0.8.8":"2017-03-09T06:42:24.296Z","0.9.0":"2017-03-10T01:44:32.002Z","0.9.1":"2017-03-11T00:00:43.884Z","0.9.2":"2017-03-13T07:29:16.407Z","0.9.3":"2017-03-16T04:46:20.515Z","0.9.4":"2017-03-20T22:09:16.482Z","0.9.5":"2017-03-23T02:04:07.200Z","0.9.6":"2017-03-25T22:45:36.532Z","0.9.7":"2017-03-28T22:17:52.385Z","0.9.8":"2017-03-31T22:02:17.266Z","0.9.9":"2017-04-03T06:24:14.427Z","0.9.10":"2017-04-09T04:22:06.871Z","0.9.11":"2017-04-16T08:04:18.083Z","0.9.12":"2017-04-21T22:15:17.846Z","0.9.13":"2017-04-30T16:55:11.663Z"},"author":{"name":"sheetjs"},"repository":{"type":"git","url":"git://github.com/SheetJS/js-xlsx.git"},"readmeFilename":"README.md","users":{"326060588":true,"sheetjs":true,"mathjs":true,"niggler":true,"sheetjsdev":true,"brennebeck":true,"chengen":true,"commandlxl":true,"sherylynn":true,"detj":true,"neuesleben":true,"cdrnch":true,"tomi77":true,"hiwanz":true,"mecal":true,"fingnet":true,"feryardiant":true,"serdar":true,"olamedia":true,"aconrado":true,"sessionbean":true,"frozzerrer":true,"frostfang83":true,"ygjack":true,"diwushi33":true,"52u":true,"du2b":true,"pingortle":true,"junipertcy":true,"tunnckocore":true,"zhen":true,"iamdb":true,"samuelrn":true,"clholzin":true,"willbreitkreutz":true,"valorkin":true,"jasonevrtt":true,"markstos":true,"ricoterox":true,"schiznitz":true,"nick_mcg":true,"dy_hxl":true,"nanook":true,"mistkafka":true,"polaretto":true,"vwal":true,"redmonkeydf":true,"scaffrey":true,"bretbouchard":true,"neoklosch":true,"456wyc":true,"j_junyent":true,"ncoop":true,"lgh06":true,"kinday":true,"flpamr":true,"ezodude":true,"brostoch":true,"visual.io":true,"usabilityetc":true,"marsking":true,"tscole":true,"roman-io":true,"zuizuihao":true,"wangnan0610":true,"jakedetels":true,"titarenko":true,"mayq0422":true,"ysk8":true,"aleksandrsidorov":true,"dainov":true,"necinc":true,"castasamu":true,"jacobmischka":true,"konamgil":true,"phgyorgygulyas":true,"michaelsouellette":true,"lizhiqiang":true,"yaozhenx":true,"steve3d3d":true,"illustratordavid":true,"webbot":true,"vijayst":true,"pddivine":true,"kaashin":true,"wanglinwei":true,"honingwon":true,"ahvonenj":true,"ohar":true,"shekharreddy":true,"ungurys":true,"mirreal":true,"yoshihide":true,"oboochin":true,"haobingwang":true,"ayoungh":true,"ninozhang":true,"jimjin":true,"oskaryil":true,"madvedd":true,"anker":true,"benhuang":true,"pirxpilot":true,"sharper":true,"baristna":true,"rbecheras":true,"fengmiaosen":true,"kevin_xi":true,"oblank":true,"jvill030":true,"ramaleh":true,"xfloops":true,"andmeics":true,"hema":true,"frankl83":true,"almazov":true,"leeonway":true,"rshaw":true},"keywords":["excel","xls","xlsx","xlsb","xlsm","ods","office","spreadsheet"],"bugs":{"url":"https://github.com/SheetJS/js-xlsx/issues"},"license":"Apache-2.0","homepage":"http://sheetjs.com/opensource","_attachments":{},"_etag":"W/\"590616ef-275e0\"","_lastModified":"Sun, 30 Apr 2017 16:55:11 GMT"}